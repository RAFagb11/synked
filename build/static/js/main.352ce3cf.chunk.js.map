{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/PrivateRoute.js","components/Navigation.js","pages/LandingPage.js","pages/Login.js","pages/Register.js","pages/StudentDashboard.js","services/profileService.js","components/ApplicationModal.js","pages/CompanyDashboard.js","components/ProjectCard.js","pages/ProjectListings.js","components/VideoRecorder.js","pages/ProjectDetail.js","services/projectService.js","services/applicationService.js","pages/CreateProfile.js","pages/PostProject.js","pages/StudentProjectPortal.js","pages/CompanyProjectManagement.js","pages/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","auth","getAuth","db","getFirestore","storage","getStorage","console","log","async","testCollection","collection","testDoc","addDoc","test","timestamp","Date","toISOString","id","error","alert","message","testConnection","AuthContext","createContext","AuthProvider","_ref","children","currentUser","setCurrentUser","useState","userType","setUserType","userProfile","setUserProfile","loading","setLoading","fetchUserData","uid","userDoc","getDoc","doc","exists","userData","data","profileCompleted","profileRef","profileDoc","useEffect","onAuthStateChanged","user","value","signup","email","password","type","createUserWithEmailAndPassword","setDoc","createdAt","login","result","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","React","createElement","Provider","PrivateRoute","useContext","Navigate","to","Navigation","navigate","useNavigate","handleSectionLink","sectionId","e","window","location","pathname","preventDefault","element","document","getElementById","scrollIntoView","behavior","className","onClick","handleLogoClick","scrollTo","top","style","cursor","Link","Fragment","LandingPage","display","alignItems","justifyContent","flexWrap","src","alt","setTimeout","href","Login","_location$state","setEmail","setPassword","setError","from","useLocation","state","maxWidth","margin","padding","boxShadow","borderRadius","textAlign","marginBottom","color","backgroundColor","onSubmit","fontWeight","onChange","target","required","width","border","disabled","marginTop","textDecoration","Register","initialUserType","URLSearchParams","search","get","confirmPassword","setConfirmPassword","gap","checked","marginRight","StudentDashboard","profile","setProfile","activeProjects","setActiveProjects","applications","setApplications","recentDeliverables","setRecentDeliverables","activeTab","setActiveTab","projectsQuery","query","where","projectsSnapshot","getDocs","projectsList","projectDoc","docs","projectData","companyDoc","companyId","company","deliverablesQuery","deliverablesData","map","submissionsQuery","submissionsData","totalDeliverables","length","completedDeliverables","filter","s","status","progress","Math","round","deliverables","submissions","push","applicationsQuery","orderBy","applicationsSnapshot","applicationsList","appDoc","appData","project","recentDeliverablesData","activeDeliverables","d","deliverable","title","sort","a","b","dueDate","seconds","fetchStudentData","formatDate","dateStr","toLocaleDateString","getStatusClass","isProfileComplete","firstName","lastName","university","major","background","whiteSpace","gridTemplateColumns","fontSize","borderBottom","_project$company","key","category","height","overflow","transition","companyName","_app$project","_app$project2","_app$company","_app$project3","_app$project3$company","_app$project4","flex","projectTitle","getApplicationStatusLabel","appliedAt","_deliverable$dueDate","_deliverable$project$","today","daysRemaining","ceil","borderLeft","description","getCompanyProfile","userId","Error","ApplicationModal","_student$skills","application","isOpen","onClose","onUpdate","student","setStudent","setStatus","feedback","setFeedback","updating","setUpdating","fetchStudentProfile","studentData","getStudentProfile","studentId","position","left","zIndex","maxHeight","overflowY","fullName","education","skills","skill","coverLetter","applicationAnswer","availability","videoUrl","controls","placeholder","minHeight","applicationRef","updateDoc","lastUpdated","CompanyDashboard","projects","setProjects","selectedApplication","setSelectedApplication","showModal","setShowModal","fetchData","projectsQ","_a$createdAt","_b$createdAt","aTime","applicationsQ","_a$createdAt2","_b$createdAt2","handleViewApplication","_project$applicants","currentStatus","newStatus","projectRef","toggleProjectStatus","slice","applicants","handleCloseModal","handleApplicationUpdate","ProjectCard","setCompany","companyData","fetchCompany","charAt","industry","duration","compensation","ProjectListings","setFilter","searchTerm","setSearchTerm","projectsRef","path","querySnapshot","empty","size","timeA","filteredProjects","toLowerCase","includes","fetchProjects","textTransform","VideoRecorder","onVideoReady","isRecording","setIsRecording","videoBlob","setVideoBlob","uploading","setUploading","recordingTime","setRecordingTime","videoRef","useRef","mediaRecorderRef","streamRef","timerRef","current","getTracks","forEach","track","stop","clearInterval","stopRecording","formatTime","floor","toString","padStart","ref","autoPlay","muted","stream","navigator","mediaDevices","getUserMedia","video","audio","srcObject","mediaRecorder","MediaRecorder","chunks","ondataavailable","onstop","blob","Blob","start","setInterval","prev","err","filename","now","storageRef","uploadBytes","downloadURL","getDownloadURL","ProjectDetail","_project$skills","_project$applicationR","_project$applicationR2","useParams","setProject","showApplicationForm","setShowApplicationForm","setCoverLetter","setAvailability","setApplicationAnswer","videoFile","setVideoFile","setVideoUrl","videoUploading","setVideoUploading","videoError","setVideoError","submitting","setSubmitting","applicationSuccess","setApplicationSuccess","getProjectById","fetchProjectData","isOwnProject","minWidth","isExperienceOnly","checkIfAlreadyApplied","some","finalVideoUrl","snapshot","applicationData","serverTimestamp","createApplication","arrayUnion","applicationRequirements","question","requireVideoIntro","url","accept","file","files","startsWith","name","companyDescription","companySize","companyWebsite","rel","CreateProfile","setFullName","bio","setBio","setEducation","setSkills","portfolioUrl","setPortfolioUrl","linkedinUrl","setLinkedinUrl","githubUrl","setGithubUrl","setCompanyName","contactName","setContactName","setCompanyDescription","setIndustry","setLocation","setCompanySize","setCompanyWebsite","contactEmail","setContactEmail","profileData","split","trim","collectionName","ind","PostProject","setTitle","setDescription","setCategory","setDuration","setCompensation","setIsExperienceOnly","applicationQuestion","setApplicationQuestion","setRequireVideoIntro","skillsArray","parseFloat","cat","option","min","step","StudentProjectPortal","setDeliverables","activeDeliverable","setActiveDeliverable","messages","setMessages","newMessage","setNewMessage","submission","setSubmission","content","isSubmitting","setIsSubmitting","activities","setActivities","currentDeliverable","find","messagesQuery","messagesData","getTime","activitiesQuery","activitiesData","calculateProgress","completedCount","fileUrl","submissionData","deliverableId","submittedAt","updatedAt","activityType","updatedDeliverable","updatedDeliverables","index","points","flexDirection","senderType","toLocaleTimeString","hour","minute","messageData","senderId","isRead","activity","CompanyProjectManagement","_activeStudent$firstN","_activeStudent$lastNa","_activeStudent$skills","students","setStudents","pendingApplications","setPendingApplications","setSubmissions","activeStudent","setActiveStudent","newDeliverable","setNewDeliverable","isAddingDeliverable","setIsAddingDeliverable","enrolledStudentsIds","enrolledStudents","studentsData","studentDoc","applicationsData","applicationsWithProfiles","Promise","all","studentProfile","fetchMessages","fetchSubmissions","handleProvideFeedback","_deliverables$find","calculateStudentProgress","getStudentSubmissions","_student$firstName","_student$lastName","year","join","rows","recipientId","participants","deliverableData","parseInt","right","_application$studentP3","_application$studentP4","_application$studentP5","_application$studentP6","_application$studentP7","_application$studentP8","_application$studentP9","_application$studentP10","_application$studentP","_application$studentP2","handleAcceptApplication","handleRejectApplication","NotFound","WebkitBackgroundClip","WebkitTextFillColor","App","Router","Routes","Route","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.352ce3cf.chunk.js","sourcesContent":["// src/firebase.js - Update this file with your actual Firebase configuration\nimport { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore, collection, addDoc } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\n// Replace with your actual Firebase config from Firebase Console\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBGODqqdtwz8SFoyi3UQKsBJj-bEOZFo24\",\n  authDomain: \"synked-db.firebaseapp.com\",\n  projectId: \"synked-db\",\n  storageBucket: \"synked-db.firebasestorage.app\",\n  messagingSenderId: \"610714142518\",\n  appId: \"1:610714142518:web:fd1af537bb25288d491597\",\n  measurementId: \"G-C5EBLWSXQH\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize services\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\nexport const storage = getStorage(app);\n\n// After initializing Firebase services\n\nconsole.log(\"Firebase initialized with project:\", firebaseConfig.projectId);\nconsole.log(\"Auth instance:\", auth);\nconsole.log(\"Firestore instance:\", db);\n\n// Test Firestore connection immediately\nconst testConnection = async () => {\n  try {\n    const testCollection = collection(db, 'connection_test');\n    const testDoc = await addDoc(testCollection, {\n      test: true,\n      timestamp: new Date().toISOString()\n    });\n    console.log(\"Firebase connection verified. Test document written:\", testDoc.id);\n  } catch (error) {\n    console.error(\"FIREBASE CONNECTION ERROR:\", error);\n    alert(\"Firebase connection error: \" + error.message);\n  }\n};\n\ntestConnection();\n\nexport default app;\n","import React, { useEffect, useState, createContext } from 'react';\nimport { \n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  sendPasswordResetEmail\n} from 'firebase/auth';\nimport { auth, db } from '../firebase';\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userType, setUserType] = useState(null);\n  const [userProfile, setUserProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Sign up function\n  const signup = async (email, password, type) => {\n    console.log(\"Signing up:\", email, type);\n    \n    // Create user in Firebase Auth\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n    \n    console.log(\"User created:\", user.uid);\n    \n    // Store user type in Firestore\n    await setDoc(doc(db, 'users', user.uid), {\n      email,\n      userType: type,\n      createdAt: new Date().toISOString(),\n      profileCompleted: false\n    });\n    \n    setUserType(type);\n    return user;\n  };\n\n  // Log in function\n  const login = async (email, password) => {\n    console.log(\"Logging in:\", email);\n    const result = await signInWithEmailAndPassword(auth, email, password);\n    console.log(\"Login successful\", result.user.uid);\n    return result;\n  };\n\n  // Log out function\n  const logout = async () => {\n    console.log(\"Logging out\");\n    return await signOut(auth);\n  };\n\n  // Reset password function\n  const resetPassword = (email) => {\n    return sendPasswordResetEmail(auth, email);\n  };\n\n  // Fetch user data from Firestore\n  const fetchUserData = async (uid) => {\n    console.log(\"Fetching user data for:\", uid);\n    const userDoc = await getDoc(doc(db, 'users', uid));\n    \n    if (userDoc.exists()) {\n      const userData = userDoc.data();\n      console.log(\"User data found:\", userData);\n      setUserType(userData.userType);\n      \n      // Fetch profile data if profile is completed\n      if (userData.profileCompleted) {\n        const profileRef = doc(db, `${userData.userType}Profiles`, uid);\n        const profileDoc = await getDoc(profileRef);\n        \n        if (profileDoc.exists()) {\n          setUserProfile(profileDoc.data());\n          console.log(\"User profile loaded:\", profileDoc.data());\n        }\n      }\n      \n      return userData;\n    } else {\n      console.log(\"No user data found\");\n    }\n    \n    return null;\n  };\n\n  // Listen for auth state changes\n  useEffect(() => {\n    console.log(\"Setting up auth state listener\");\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\n      console.log(\"Auth state changed:\", user?.uid);\n      setCurrentUser(user);\n      \n      if (user) {\n        await fetchUserData(user.uid);\n      } else {\n        setUserType(null);\n        setUserProfile(null);\n      }\n      \n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    userType,\n    userProfile,\n    signup,\n    login,\n    logout,\n    resetPassword,\n    fetchUserData\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};","import React, { useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\n\n// src/components/PrivateRoute.js\nconst PrivateRoute = ({ children }) => {\n  const { currentUser } = useContext(AuthContext);\n  \n  // In preview mode, allow access to protected routes\n  if (process.env.REACT_APP_PREVIEW_MODE === \"true\") {\n    return children;\n  }\n  \n  return currentUser ? children : <Navigate to=\"/login\" />;\n};\n\nexport default PrivateRoute;\n","// src/components/Navigation.js\nimport React, { useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../contexts/AuthContext';\n\nconst Navigation = () => {\n  const { currentUser, logout, userType } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      navigate('/');\n    } catch (error) {\n      console.error('Failed to log out', error);\n    }\n  };\n\n  const handleSectionLink = (sectionId, e) => {\n    if (window.location.pathname === '/') {\n      e.preventDefault();\n      const element = document.getElementById(sectionId);\n      if (element) {\n        element.scrollIntoView({ behavior: 'smooth' });\n      }\n    }\n  };\n\n  const handleLogoClick = () => {\n    // Navigate to home page\n    if (window.location.pathname !== '/') {\n      navigate('/');\n    } else {\n      // Already on home page, scroll to top\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <header>\n      <div className=\"container\">\n        <nav>\n        <div \n            className=\"logo\"\n            onClick={handleLogoClick}\n            style={{ cursor: 'pointer' }}\n          >\n            Synked\n          </div>\n          <ul className=\"nav-links\">\n            <li>\n              <Link to=\"/\" onClick={(e) => handleSectionLink('features', e)}>\n                Features\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\" onClick={(e) => handleSectionLink('how-it-works', e)}>\n                How It Works\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\" onClick={(e) => handleSectionLink('testimonials', e)}>\n                Success Stories\n              </Link>\n            </li>\n            \n            {/* Only show Browse Projects for non-company users */}\n            {userType !== 'company' && (\n              <li><Link to=\"/projects\">Browse Projects</Link></li>\n            )}\n            \n            {currentUser ? (\n              <>\n                <li>\n                  <Link \n                    to={userType === 'student' ? '/student/dashboard' : '/company/dashboard'} \n                    className=\"btn btn-outline\"\n                  >\n                    Dashboard\n                  </Link>\n                </li>\n                <li><button onClick={handleLogout} className=\"btn btn-primary\">Log Out</button></li>\n              </>\n            ) : (\n              <>\n                <li><Link to=\"/login\" className=\"btn btn-outline\">Log In</Link></li>\n                <li><Link to=\"/register\" className=\"btn btn-primary\">Sign Up Free</Link></li>\n              </>\n            )}\n          </ul>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Navigation;","// src/pages/LandingPage.js\nimport React from \"react\";\nimport { useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from '../contexts/AuthContext';\nimport Navigation from \"../components/Navigation\";\n\nconst LandingPage = () => {\n  const { currentUser, userType } = useContext(AuthContext);\n  return (\n    <>\n      <Navigation />\n\n      {/* Hero Section */}\n      <section className=\"hero\">\n        <div\n          className=\"container\"\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          <div className=\"hero-content\">\n            <div className=\"feature-badge\">\n              Student-Company Collaboration Platform\n            </div>\n            <h1>Where Talent Meets Opportunity</h1>\n            <p>\n              Connect ambitious students with companies for impactful projects.\n              Build portfolios, gain experience, and create real business value.\n            </p>\n            <div className=\"hero-buttons\">\n              <Link to=\"/register?type=company\" className=\"btn btn-primary\">\n                For Companies\n              </Link>\n              <Link to=\"/register?type=student\" className=\"btn btn-outline\">\n                For Students\n              </Link>\n            </div>\n          </div>\n          <div className=\"hero-image\">        {/* CHANGE IMAGE ON LANDING PAGE */} \n            <img\n              src=\"https://d92mrp7hetgfk.cloudfront.net/images/sites/misc/su-home-hero-image-m/original.png\"\n              alt=\"Synked platform\"\n            />\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"features\" id=\"features\">\n        <div className=\"container\">\n          <div className=\"section-header\">\n            <div className=\"feature-badge\">Benefits</div>\n            <h2>Transforming Work Experience</h2>\n            <p>\n              Our platform bridges the gap between academic learning and\n              professional experience.\n            </p>\n          </div>\n          <div className=\"feature-grid\">\n            <div className=\"feature-card\">\n              <div className=\"feature-icon\">💼</div>\n              <h3>For Companies</h3>\n              <p>\n                Tap into a pool of motivated students with fresh perspectives.\n                Complete projects affordably while discovering future talent for\n                your organization.\n              </p>\n            </div>\n            <div className=\"feature-card\">\n              <div className=\"feature-icon\">🎓</div>\n              <h3>For Students</h3>\n              <p>\n                Build a standout portfolio with real-world projects. Gain\n                valuable experience, develop professional skills, and make\n                meaningful connections.\n              </p>\n            </div>\n            <div className=\"feature-card\">\n              <div className=\"feature-icon\">🤝</div>\n              <h3>Smart Matching</h3>\n              <p>\n                Our intelligent matching system connects the right students with\n                the right projects based on skills, interests, availability, and\n                career goals.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* How It Works Section */}\n      <section className=\"how-it-works\" id=\"how-it-works\">\n        <div className=\"container\">\n          <div className=\"section-header\">\n            <div className=\"feature-badge\">Process</div>\n            <h2>Simple and Effective</h2>\n            <p>Four easy steps to connect talent with opportunity</p>\n          </div>\n          <div className=\"steps\">\n            <div className=\"step-line\"></div>\n            <div className=\"step\">\n              <div className=\"step-number\">1</div>\n              <h3>Post a Project</h3>\n              <p>Companies describe their needs, timeline, and compensation</p>\n            </div>\n            <div className=\"step\">\n              <div className=\"step-number\">2</div>\n              <h3>Get Matched</h3>\n              <p>Our system connects projects with qualified students</p>\n            </div>\n            <div className=\"step\">\n              <div className=\"step-number\">3</div>\n              <h3>Collaborate</h3>\n              <p>Work together through our platform with integrated tools</p>\n            </div>\n            <div className=\"step\">\n              <div className=\"step-number\">4</div>\n              <h3>Complete & Review</h3>\n              <p>\n                Finish the project and provide feedback for future opportunities\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials Section */}\n      <section className=\"testimonials\" id=\"testimonials\">\n        <div className=\"container\">\n          <div className=\"section-header\">\n            <div className=\"feature-badge\">Testimonials</div>\n            <h2>Success Stories</h2>\n            <p>Real experiences from our community of companies and students</p>\n          </div>\n          <div className=\"testimonial-grid\">\n            <div className=\"testimonial-card\">\n              <p className=\"testimonial-text\">\n                \"We needed help with our digital marketing strategy but couldn't\n                afford an agency. The marketing students we connected with\n                delivered incredible value and fresh ideas that transformed our\n                approach.\"\n              </p>\n              <div className=\"testimonial-author\">\n                <div className=\"author-image\">SJ</div>\n                <div className=\"author-details\">\n                  <h4>Sarah Johnson</h4>\n                  <p>Founder, EcoTech Solutions</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"testimonial-card\">\n              <p className=\"testimonial-text\">\n                \"The web development project I completed through Synked became\n                the centerpiece of my portfolio. It directly led to my\n                internship at a major tech company and gave me confidence in my\n                abilities.\"\n              </p>\n              <div className=\"testimonial-author\">\n                <div className=\"author-image\">JK</div>\n                <div className=\"author-details\">\n                  <h4>Jason Kim</h4>\n                  <p>Computer Science Student</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"testimonial-card\">\n              <p className=\"testimonial-text\">\n                \"Our startup saved thousands in development costs while\n                providing valuable experience to talented students. The quality\n                of work exceeded our expectations, and we've even hired two\n                students full-time!\"\n              </p>\n              <div className=\"testimonial-author\">\n                <div className=\"author-image\">MR</div>\n                <div className=\"author-details\">\n                  <h4>Michael Rodriguez</h4>\n                  <p>CTO, FinNext Solutions</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"cta\">\n        <div className=\"container\">\n          <h2>Ready to Bridge the Gap?</h2>\n          <p>\n            Join our community today and start connecting with opportunities\n            that transform careers and businesses.\n          </p>\n          <div className=\"cta-buttons\">\n            <Link \n              to={\n                !currentUser \n                  ? '/register?type=company' \n                  : userType === 'company' \n                    ? '/post-project' \n                    : '/register?type=company'  // Student trying to post project should register as company\n              } \n              className=\"btn btn-white\"\n              onClick={() => setTimeout(() => window.scrollTo(0, 0), 100)}\n            >\n              Post a Project\n            </Link>\n            <Link \n              to={\n                !currentUser \n                  ? '/register?type=student' \n                  : userType === 'student' \n                    ? '/student/dashboard' \n                    : '/register?type=student'  // Company trying to join as student should register as student\n              } \n              className=\"btn btn-white-outline\"\n            >\n              Join as a Student\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer>\n        <div className=\"container\">\n          <div className=\"footer-content\">\n            <div className=\"footer-column\">\n              <div className=\"footer-logo\">Synked</div>\n              <p>\n                Connecting talented students with companies for impactful\n                project experiences that benefit everyone.\n              </p>\n              <div className=\"social-links\">\n                <a href=\"#\" className=\"social-link\">\n                  f\n                </a>\n                <a href=\"#\" className=\"social-link\">\n                  in\n                </a>\n                <a href=\"#\" className=\"social-link\">\n                  🐦\n                </a>\n                <a href=\"#\" className=\"social-link\">\n                  📷\n                </a>\n              </div>\n            </div>\n            <div className=\"footer-column\">\n              <h3>For Companies</h3>\n              <ul>\n                <li>\n                  <Link to=\"/#how-it-works\">How It Works</Link>\n                </li>\n                <li>\n                  <Link to=\"/pricing\">Pricing Plans</Link>\n                </li>\n                <li>\n                  <Link to=\"/post-project\">Post a Project</Link>\n                </li>\n                <li>\n                  <Link to=\"/#testimonials\">Success Stories</Link>\n                </li>\n              </ul>\n            </div>\n            <div className=\"footer-column\">\n              <h3>For Students</h3>\n              <ul>\n                <li>\n                  <Link to=\"/projects\">Browse Projects</Link>\n                </li>\n                <li>\n                  <Link to=\"/create-profile\">Create Profile</Link>\n                </li>\n                <li>\n                  <Link to=\"/skills-assessment\">Skills Assessment</Link>\n                </li>\n                <li>\n                  <Link to=\"/resources\">Learning Resources</Link>\n                </li>\n              </ul>\n            </div>\n            <div className=\"footer-column\">\n              <h3>Company</h3>\n              <ul>\n                <li>\n                  <Link to=\"/about\">About Us</Link>\n                </li>\n                <li>\n                  <Link to=\"/blog\">Blog</Link>\n                </li>\n                <li>\n                  <Link to=\"/careers\">Careers</Link>\n                </li>\n                <li>\n                  <Link to=\"/contact\">Contact Us</Link>\n                </li>\n                <li>\n                  <Link to=\"/support\">Support</Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"footer-bottom\">\n            <p>&copy; 2025 Synked. All rights reserved.</p>\n          </div>\n        </div>\n      </footer>\n    </>\n  );\n};\n\nexport default LandingPage;\n","// src/pages/Login.js - Update to properly handle Firebase authentication\nimport React, { useState, useContext } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../contexts/AuthContext';\nimport Navigation from '../components/Navigation';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  \n  const { login } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const location = useLocation();\n  \n  // Check if we were redirected from another page\n  const from = location.state?.from || '/';\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    try {\n      setError('');\n      setLoading(true);\n      console.log(\"Attempting to log in with:\", email);\n      await login(email, password);\n      console.log(\"Login successful, navigating to:\", from);\n      navigate(from);\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      setError('Failed to log in: ' + error.message);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Navigation />\n      <div className=\"container\" style={{ maxWidth: '500px', margin: '80px auto', padding: '30px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)', borderRadius: '16px' }}>\n        <h2 style={{ textAlign: 'center', marginBottom: '30px' }}>Log In to Your Account</h2>\n        \n        {error && <div style={{ color: 'var(--danger)', marginBottom: '20px', padding: '10px', backgroundColor: 'rgba(239, 68, 68, 0.1)', borderRadius: '8px' }}>{error}</div>}\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\" style={{ marginBottom: '20px' }}>\n            <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Email Address</label>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n            />\n          </div>\n          \n          <div className=\"form-group\" style={{ marginBottom: '20px' }}>\n            <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Password</label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n            />\n          </div>\n          \n          <button \n            type=\"submit\"\n            disabled={loading}\n            className=\"btn btn-primary\"\n            style={{ width: '100%', marginTop: '10px' }}\n          >\n            {loading ? 'Logging In...' : 'Log In'}\n          </button>\n        </form>\n        \n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\n          Don't have an account? <Link to=\"/register\" style={{ color: 'var(--primary)', textDecoration: 'none' }}>Sign Up</Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;","import React, { useState, useContext } from \"react\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport Navigation from \"../components/Navigation\";\n\nconst Register = () => {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const initialUserType = searchParams.get(\"type\") || \"student\";\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [userType, setUserType] = useState(initialUserType);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const { signup } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signup(email, password, userType);\n      navigate(\"/create-profile\");\n    } catch (error) {\n      setError(\"Failed to create an account: \" + error.message);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <Navigation />\n      <div\n        className=\"container\"\n        style={{\n          maxWidth: \"500px\",\n          margin: \"80px auto\",\n          padding: \"30px\",\n          boxShadow: \"0 10px 30px rgba(0,0,0,0.05)\",\n          borderRadius: \"16px\",\n        }}\n      >\n        <h2 style={{ textAlign: \"center\", marginBottom: \"30px\" }}>\n          Create Your Synked Account\n        </h2>\n\n        {error && (\n          <div\n            style={{\n              color: \"var(--danger)\",\n              marginBottom: \"20px\",\n              padding: \"10px\",\n              backgroundColor: \"rgba(239, 68, 68, 0.1)\",\n              borderRadius: \"8px\",\n            }}\n          >\n            {error}\n          </div>\n        )}\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\" style={{ marginBottom: \"20px\" }}>\n            <label\n              style={{\n                display: \"block\",\n                marginBottom: \"8px\",\n                fontWeight: \"500\",\n              }}\n            >\n              Account Type\n            </label>\n            <div style={{ display: \"flex\", gap: \"20px\" }}>\n              <label\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  cursor: \"pointer\",\n                }}\n              >\n                <input\n                  type=\"radio\"\n                  value=\"student\"\n                  checked={userType === \"student\"}\n                  onChange={() => setUserType(\"student\")}\n                  style={{ marginRight: \"8px\" }}\n                />\n                Student\n              </label>\n              <label\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  cursor: \"pointer\",\n                }}\n              >\n                <input\n                  type=\"radio\"\n                  value=\"company\"\n                  checked={userType === \"company\"}\n                  onChange={() => setUserType(\"company\")}\n                  style={{ marginRight: \"8px\" }}\n                />\n                Company\n              </label>\n            </div>\n          </div>\n\n          <div className=\"form-group\" style={{ marginBottom: \"20px\" }}>\n            <label\n              style={{\n                display: \"block\",\n                marginBottom: \"8px\",\n                fontWeight: \"500\",\n              }}\n            >\n              Email Address\n            </label>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              style={{\n                width: \"100%\",\n                padding: \"12px\",\n                borderRadius: \"8px\",\n                border: \"1px solid #ddd\",\n              }}\n            />\n          </div>\n\n          <div className=\"form-group\" style={{ marginBottom: \"20px\" }}>\n            <label\n              style={{\n                display: \"block\",\n                marginBottom: \"8px\",\n                fontWeight: \"500\",\n              }}\n            >\n              Password\n            </label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              style={{\n                width: \"100%\",\n                padding: \"12px\",\n                borderRadius: \"8px\",\n                border: \"1px solid #ddd\",\n              }}\n            />\n          </div>\n\n          <div className=\"form-group\" style={{ marginBottom: \"20px\" }}>\n            <label\n              style={{\n                display: \"block\",\n                marginBottom: \"8px\",\n                fontWeight: \"500\",\n              }}\n            >\n              Confirm Password\n            </label>\n            <input\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              required\n              style={{\n                width: \"100%\",\n                padding: \"12px\",\n                borderRadius: \"8px\",\n                border: \"1px solid #ddd\",\n              }}\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"btn btn-primary\"\n            style={{ width: \"100%\", marginTop: \"10px\" }}\n          >\n            {loading ? \"Creating Account...\" : \"Create Account\"}\n          </button>\n        </form>\n\n        <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n          Already have an account?{\" \"}\n          <Link\n            to=\"/login\"\n            style={{ color: \"var(--primary)\", textDecoration: \"none\" }}\n          >\n            Log In\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n","// src/pages/StudentDashboard.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../contexts/AuthContext';\nimport Navigation from '../components/Navigation';\nimport { doc, getDoc, collection, query, where, getDocs, orderBy } from 'firebase/firestore';\nimport { db } from '../firebase';\n\nconst StudentDashboard = () => {\n  const { currentUser } = useContext(AuthContext);\n  const navigate = useNavigate();\n  \n  const [profile, setProfile] = useState(null);\n  const [activeProjects, setActiveProjects] = useState([]);\n  const [applications, setApplications] = useState([]);\n  const [recentDeliverables, setRecentDeliverables] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [activeTab, setActiveTab] = useState('projects');\n  \n  useEffect(() => {\n    const fetchStudentData = async () => {\n      try {\n        setLoading(true);\n        \n        // Get user document to check profileCompleted flag\n        const userDoc = await getDoc(doc(db, 'users', currentUser.uid));\n        const userData = userDoc.data();\n        \n        // Get student profile\n        const profileDoc = await getDoc(doc(db, 'studentProfiles', currentUser.uid));\n        if (profileDoc.exists()) {\n          // Add the profileCompleted flag to the profile object\n          setProfile({ \n            id: profileDoc.id, \n            ...profileDoc.data(),\n            // Use the flag from userData if it exists, otherwise false\n            profileCompleted: userData?.profileCompleted === true\n          });\n        }\n        \n        // Get active projects\n        const projectsQuery = query(\n          collection(db, 'projects'),\n          where('enrolledStudents', 'array-contains', currentUser.uid)\n        );\n        \n        const projectsSnapshot = await getDocs(projectsQuery);\n        const projectsList = [];\n        \n        for (const projectDoc of projectsSnapshot.docs) {\n          const projectData = { id: projectDoc.id, ...projectDoc.data() };\n          \n          // Get company info\n          const companyDoc = await getDoc(doc(db, 'companyProfiles', projectData.companyId));\n          if (companyDoc.exists()) {\n            projectData.company = { id: companyDoc.id, ...companyDoc.data() };\n          }\n          \n          // Get project deliverables to calculate progress\n          const deliverablesQuery = query(\n            collection(db, 'deliverables'),\n            where('projectId', '==', projectDoc.id)\n          );\n          \n          const deliverablesSnapshot = await getDocs(deliverablesQuery);\n          const deliverablesData = deliverablesSnapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          }));\n          \n          // Get student submissions for this project\n          const submissionsQuery = query(\n            collection(db, 'submissions'),\n            where('projectId', '==', projectDoc.id),\n            where('studentId', '==', currentUser.uid)\n          );\n          \n          const submissionsSnapshot = await getDocs(submissionsQuery);\n          const submissionsData = submissionsSnapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          }));\n          \n          // Calculate progress\n          const totalDeliverables = deliverablesData.length;\n          const completedDeliverables = submissionsData.filter(s => s.status === 'approved').length;\n          const progress = totalDeliverables > 0 ? Math.round((completedDeliverables / totalDeliverables) * 100) : 0;\n          \n          projectData.progress = progress;\n          projectData.deliverables = deliverablesData;\n          projectData.submissions = submissionsData;\n          \n          projectsList.push(projectData);\n        }\n        \n        setActiveProjects(projectsList);\n        \n        // Get applications\n        const applicationsQuery = query(\n          collection(db, 'applications'),\n          where('studentId', '==', currentUser.uid),\n          orderBy('appliedAt', 'desc')\n        );\n        \n        const applicationsSnapshot = await getDocs(applicationsQuery);\n        const applicationsList = [];\n        \n        for (const appDoc of applicationsSnapshot.docs) {\n          const appData = { id: appDoc.id, ...appDoc.data() };\n          \n          // Get project info\n          if (appData.projectId) {\n            const projectDoc = await getDoc(doc(db, 'projects', appData.projectId));\n            if (projectDoc.exists()) {\n              appData.project = { id: projectDoc.id, ...projectDoc.data() };\n              \n              // Get company info\n              if (appData.project.companyId) {\n                const companyDoc = await getDoc(doc(db, 'companyProfiles', appData.project.companyId));\n                if (companyDoc.exists()) {\n                  appData.company = { id: companyDoc.id, ...companyDoc.data() };\n                }\n              }\n            }\n          }\n          \n          applicationsList.push(appData);\n        }\n        \n        setApplications(applicationsList);\n        \n        // Get recent deliverables from all projects\n        const recentDeliverablesData = [];\n        \n        for (const project of projectsList) {\n          // Get deliverables that are pending or in progress\n          const activeDeliverables = project.deliverables.filter(d => \n            d.status === 'pending' || d.status === 'in-progress' || d.status === 'rejected'\n          );\n          \n          for (const deliverable of activeDeliverables) {\n            recentDeliverablesData.push({\n              ...deliverable,\n              project: {\n                id: project.id,\n                title: project.title,\n                company: project.company\n              }\n            });\n          }\n        }\n        \n        // Sort by due date, closest first\n        recentDeliverablesData.sort((a, b) => {\n          if (a.dueDate && b.dueDate) {\n            const aDate = a.dueDate.seconds ? new Date(a.dueDate.seconds * 1000) : new Date(a.dueDate);\n            const bDate = b.dueDate.seconds ? new Date(b.dueDate.seconds * 1000) : new Date(b.dueDate);\n            return aDate - bDate;\n          }\n          return 0;\n        });\n        \n        setRecentDeliverables(recentDeliverablesData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching student data:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    \n    if (currentUser) {\n      fetchStudentData();\n    }\n  }, [currentUser]);\n  \n  // Format date\n  const formatDate = (dateStr) => {\n    if (!dateStr) return 'No date set';\n    \n    try {\n      if (dateStr.seconds) {\n        // Firestore timestamp\n        return new Date(dateStr.seconds * 1000).toLocaleDateString();\n      }\n      return new Date(dateStr).toLocaleDateString();\n    } catch (e) {\n      return dateStr;\n    }\n  };\n  \n  // Get status class for styling\n  const getStatusClass = (status) => {\n    switch (status) {\n      case 'accepted':\n      case 'completed':\n      case 'approved':\n        return 'success';\n      case 'in-progress':\n      case 'submitted':\n        return 'primary';\n      case 'pending':\n        return 'warning';\n      case 'rejected':\n        return 'danger';\n      default:\n        return '';\n    }\n  };\n  \n  // Get application status label\n  const getApplicationStatusLabel = (status) => {\n    switch (status) {\n      case 'pending':\n        return 'Under Review';\n      case 'accepted':\n        return 'Accepted';\n      case 'rejected':\n        return 'Not Selected';\n      default:\n        return status;\n    }\n  };\n  \n  if (loading) {\n    return (\n      <>\n        <Navigation />\n        <div className=\"container\" style={{ padding: '60px 0', textAlign: 'center' }}>\n          <div>Loading your dashboard...</div>\n        </div>\n      </>\n    );\n  }\n  \n  if (error) {\n    return (\n      <>\n        <Navigation />\n        <div className=\"container\" style={{ padding: '60px 0', textAlign: 'center' }}>\n          <div style={{ color: 'var(--danger)' }}>{error}</div>\n        </div>\n      </>\n    );\n  }\n  \n  // Check if profile is complete\n  const isProfileComplete = profile?.profileCompleted || \n  (profile && \n    profile.firstName && \n    profile.lastName && \n    profile.university && \n    profile.major);\n  \n  return (\n    <>\n      <Navigation />\n      <div className=\"container\" style={{ padding: '40px 0' }}>\n        {!isProfileComplete && (\n          <div style={{ \n            background: 'rgba(251, 191, 36, 0.1)', \n            color: 'var(--warning)', \n            padding: '15px 20px', \n            borderRadius: '8px', \n            marginBottom: '30px',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          }}>\n            <div>\n              <strong>Complete your profile</strong> - Add your details to increase your chances of getting selected for projects\n            </div>\n            <Link to=\"/create-profile\" className=\"btn btn-primary\" style={{ whiteSpace: 'nowrap' }}>\n              Complete Profile\n            </Link>\n          </div>\n        )}\n        \n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '30px' }}>\n          <h2>Student Dashboard</h2>\n          <Link to=\"/projects\" className=\"btn btn-primary\">\n            Browse Projects\n          </Link>\n        </div>\n        \n        {/* Dashboard Overview Stats */}\n        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '20px', marginBottom: '30px' }}>\n          <div style={{ background: 'white', padding: '20px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)' }}>\n            <h3 style={{ marginBottom: '10px' }}>Active Projects</h3>\n            <div style={{ fontSize: '32px', fontWeight: '700', marginBottom: '10px', color: 'var(--primary)' }}>\n              {activeProjects.length}\n            </div>\n            <div>\n              {activeProjects.length > 0 ? (\n                <span>Projects in progress</span>\n              ) : (\n                <Link to=\"/projects\" style={{ color: 'var(--primary)', textDecoration: 'none' }}>\n                  Browse open projects\n                </Link>\n              )}\n            </div>\n          </div>\n          \n          <div style={{ background: 'white', padding: '20px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)' }}>\n            <h3 style={{ marginBottom: '10px' }}>Pending Applications</h3>\n            <div style={{ fontSize: '32px', fontWeight: '700', marginBottom: '10px', color: 'var(--primary)' }}>\n              {applications.filter(app => app.status === 'pending').length}\n            </div>\n            <div>Applications awaiting review</div>\n          </div>\n          \n          <div style={{ background: 'white', padding: '20px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)' }}>\n            <h3 style={{ marginBottom: '10px' }}>Upcoming Deliverables</h3>\n            <div style={{ fontSize: '32px', fontWeight: '700', marginBottom: '10px', color: 'var(--primary)' }}>\n              {recentDeliverables.length}\n            </div>\n            <div>Tasks to complete</div>\n          </div>\n          \n          <div style={{ background: 'white', padding: '20px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)' }}>\n            <h3 style={{ marginBottom: '10px' }}>Profile Completion</h3>\n            <div style={{ fontSize: '32px', fontWeight: '700', marginBottom: '10px', color: 'var(--primary)' }}>\n              {isProfileComplete ? '100%' : '50%'}\n            </div>\n            <div>\n              {isProfileComplete ? (\n                <span>Your profile is complete</span>\n              ) : (\n                <Link to=\"/create-profile\" style={{ color: 'var(--primary)', textDecoration: 'none' }}>\n                  Complete your profile\n                </Link>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        {/* Tab Navigation */}\n        <div style={{ display: 'flex', borderBottom: '1px solid #eee', marginBottom: '30px' }}>\n          <button \n            onClick={() => setActiveTab('projects')}\n            style={{ \n              padding: '12px 20px', \n              background: 'none', \n              border: 'none', \n              cursor: 'pointer',\n              borderBottom: activeTab === 'projects' ? '3px solid var(--primary)' : 'none',\n              fontWeight: activeTab === 'projects' ? '600' : '400',\n              color: activeTab === 'projects' ? 'var(--primary)' : 'inherit'\n            }}\n          >\n            My Projects\n          </button>\n          <button \n            onClick={() => setActiveTab('applications')}\n            style={{ \n              padding: '12px 20px', \n              background: 'none', \n              border: 'none', \n              cursor: 'pointer',\n              borderBottom: activeTab === 'applications' ? '3px solid var(--primary)' : 'none',\n              fontWeight: activeTab === 'applications' ? '600' : '400',\n              color: activeTab === 'applications' ? 'var(--primary)' : 'inherit'\n            }}\n          >\n            Applications\n          </button>\n          <button \n            onClick={() => setActiveTab('deliverables')}\n            style={{ \n              padding: '12px 20px', \n              background: 'none', \n              border: 'none', \n              cursor: 'pointer',\n              borderBottom: activeTab === 'deliverables' ? '3px solid var(--primary)' : 'none',\n              fontWeight: activeTab === 'deliverables' ? '600' : '400',\n              color: activeTab === 'deliverables' ? 'var(--primary)' : 'inherit'\n            }}\n          >\n            Upcoming Deliverables\n          </button>\n        </div>\n        \n        {/* Projects Tab */}\n        {activeTab === 'projects' && (\n          <div>\n            <h3 style={{ marginBottom: '20px' }}>Active Projects</h3>\n            \n            {activeProjects.length === 0 ? (\n              <div style={{ \n                background: 'white', \n                padding: '30px', \n                borderRadius: '16px', \n                boxShadow: '0 10px 30px rgba(0,0,0,0.05)',\n                textAlign: 'center'\n              }}>\n                <p style={{ marginBottom: '20px' }}>You don't have any active projects yet.</p>\n                <Link to=\"/projects\" className=\"btn btn-primary\">\n                  Browse Available Projects\n                </Link>\n              </div>\n            ) : (\n              <div className=\"feature-grid\">\n                {activeProjects.map(project => (\n                  <div \n                    key={project.id} \n                    className=\"feature-card\"\n                    style={{ cursor: 'pointer' }}\n                    onClick={() => navigate(`/student/project/${project.id}`)}\n                  >\n                    <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\n                      <div className=\"feature-badge\">{project.category}</div>\n                      <div>\n                        <strong>{project.progress}%</strong> Complete\n                      </div>\n                    </div>\n                    \n                    <h3>{project.title}</h3>\n                    \n                    <div style={{ height: '8px', background: '#f1f5f9', borderRadius: '4px', overflow: 'hidden', margin: '15px 0' }}>\n                      <div \n                        style={{ \n                          height: '100%', \n                          width: `${project.progress}%`, \n                          background: 'linear-gradient(to right, var(--gradient-start), var(--gradient-end))',\n                          borderRadius: '4px',\n                          transition: 'width 0.5s ease'\n                        }}\n                      ></div>\n                    </div>\n                    \n                    <div style={{ marginBottom: '15px' }}>\n                      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '5px' }}>\n                        <span style={{ fontWeight: '500' }}>Company:</span>\n                        <span>{project.company?.companyName || 'Company'}</span>\n                      </div>\n                      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '5px' }}>\n                        <span style={{ fontWeight: '500' }}>Deliverables:</span>\n                        <span>{project.deliverables.length}</span>\n                      </div>\n                      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <span style={{ fontWeight: '500' }}>Completed:</span>\n                        <span>{project.submissions.filter(s => s.status === 'approved').length} / {project.deliverables.length}</span>\n                      </div>\n                    </div>\n                    \n                    <button className=\"btn btn-primary\" style={{ width: '100%' }}>\n                      Go to Project\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n        \n        {/* Applications Tab */}\n        {activeTab === 'applications' && (\n          <div>\n            <h3 style={{ marginBottom: '20px' }}>My Applications</h3>\n            \n            {applications.length === 0 ? (\n              <div style={{ \n                background: 'white', \n                padding: '30px', \n                borderRadius: '16px', \n                boxShadow: '0 10px 30px rgba(0,0,0,0.05)',\n                textAlign: 'center'\n              }}>\n                <p style={{ marginBottom: '20px' }}>You haven't applied to any projects yet.</p>\n                <Link to=\"/projects\" className=\"btn btn-primary\">\n                  Browse Available Projects\n                </Link>\n              </div>\n            ) : (\n              <div style={{ display: 'grid', gap: '20px' }}>\n                {applications.map(app => (\n                  <div \n                    key={app.id} \n                    style={{ \n                      background: 'white', \n                      padding: '20px', \n                      borderRadius: '16px', \n                      boxShadow: '0 10px 30px rgba(0,0,0,0.05)',\n                      display: 'flex',\n                      flexWrap: 'wrap',\n                      justifyContent: 'space-between',\n                      alignItems: 'center',\n                      gap: '15px'\n                    }}\n                  >\n                    <div style={{ flex: '1' }}>\n                      <h3 style={{ marginBottom: '10px' }}>{app.project?.title || app.projectTitle}</h3>\n                      <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap', marginBottom: '10px' }}>\n                        <div className=\"feature-badge\">\n                          {app.project?.category || 'Project'}\n                        </div>\n                        <div className={`feature-badge ${getStatusClass(app.status)}`}>\n                          {getApplicationStatusLabel(app.status)}\n                        </div>\n                      </div>\n                      <div style={{ fontSize: '14px', color: '#666' }}>\n                        <strong>Company:</strong> {app.company?.companyName || app.project?.company?.companyName || 'Company'}\n                      </div>\n                      <div style={{ fontSize: '14px', color: '#666' }}>\n                        <strong>Applied:</strong> {formatDate(app.appliedAt)}\n                      </div>\n                    </div>\n                    \n                    <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\n                      {app.status === 'accepted' && (\n                        <Link to={`/student/project/${app.projectId}`} className=\"btn btn-primary\">\n                          Go to Project\n                        </Link>\n                      )}\n                      \n                      {app.project?.id && app.status === 'pending' && (\n                        <Link to={`/projects/${app.project.id}`} className=\"btn btn-outline\">\n                          View Listing\n                        </Link>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n        \n        {/* Deliverables Tab */}\n        {activeTab === 'deliverables' && (\n          <div>\n            <h3 style={{ marginBottom: '20px' }}>Upcoming Deliverables</h3>\n            \n            {recentDeliverables.length === 0 ? (\n              <div style={{ \n                background: 'white', \n                padding: '30px', \n                borderRadius: '16px', \n                boxShadow: '0 10px 30px rgba(0,0,0,0.05)',\n                textAlign: 'center'\n              }}>\n                <p>You don't have any pending deliverables.</p>\n              </div>\n            ) : (\n              <div style={{ display: 'grid', gap: '20px' }}>\n                {recentDeliverables.map(deliverable => {\n                  // Calculate days remaining\n                  const dueDate = deliverable.dueDate?.seconds \n                    ? new Date(deliverable.dueDate.seconds * 1000) \n                    : new Date(deliverable.dueDate);\n                  \n                  const today = new Date();\n                  const daysRemaining = Math.ceil((dueDate - today) / (1000 * 60 * 60 * 24));\n                  \n                  return (\n                    <div \n                      key={deliverable.id} \n                      style={{ \n                        background: 'white', \n                        padding: '20px', \n                        borderRadius: '16px', \n                        boxShadow: '0 10px 30px rgba(0,0,0,0.05)',\n                        borderLeft: daysRemaining <= 3 \n                          ? '4px solid var(--danger)' \n                          : daysRemaining <= 7 \n                          ? '4px solid var(--warning)' \n                          : '4px solid var(--primary)'\n                      }}\n                    >\n                      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', flexWrap: 'wrap', gap: '10px', marginBottom: '15px' }}>\n                        <div>\n                          <h3 style={{ marginBottom: '5px' }}>{deliverable.title}</h3>\n                          <div style={{ fontSize: '14px', color: '#666' }}>\n                            {deliverable.project.title} - {deliverable.project.company?.companyName || 'Company'}\n                          </div>\n                        </div>\n                        \n                        <div style={{ textAlign: 'right' }}>\n                          <div className={`feature-badge ${\n                            daysRemaining <= 3 \n                              ? 'danger' \n                              : daysRemaining <= 7 \n                              ? 'warning' \n                              : 'primary'\n                          }`}>\n                            {daysRemaining <= 0 \n                              ? 'Due Today' \n                              : daysRemaining === 1 \n                              ? '1 Day Left' \n                              : `${daysRemaining} Days Left`}\n                          </div>\n                          <div style={{ fontSize: '14px', color: '#666', marginTop: '5px' }}>\n                            Due: {formatDate(deliverable.dueDate)}\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <p style={{ marginBottom: '20px' }}>{deliverable.description}</p>\n                      \n                      <Link to={`/student/project/${deliverable.project.id}`} className=\"btn btn-primary\" style={{ width: '100%' }}>\n                        Go to Project\n                      </Link>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default StudentDashboard;","// src/services/profileService.js\nimport {\n  doc,\n  getDoc,\n  setDoc,\n  updateDoc,\n  serverTimestamp,\n} from \"firebase/firestore\";\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { db, storage } from \"../firebase\";\n\n\n\n/**\n * Create or update a student profile\n * @param {string} userId - User ID\n * @param {Object} profileData - Profile data\n * @returns {Promise<boolean>} - Success status\n */\nexport const createStudentProfile = async (userId, profileData) => {\n  try {\n    // Create profile document\n    await setDoc(doc(db, \"studentProfiles\", userId), {\n      ...profileData,\n      createdAt: serverTimestamp(),\n      updatedAt: serverTimestamp(),\n    });\n\n    // Update user document to mark profile as completed\n    await updateDoc(doc(db, \"users\", userId), {\n      profileCompleted: true,\n    });\n\n    return true;\n  } catch (error) {\n    throw new Error(\"Failed to create student profile: \" + error.message);\n  }\n};\n\n/**\n * Create or update a company profile\n * @param {string} userId - User ID\n * @param {Object} profileData - Profile data\n * @returns {Promise<boolean>} - Success status\n */\nexport const createCompanyProfile = async (userId, profileData) => {\n  try {\n    // Create profile document\n    await setDoc(doc(db, \"companyProfiles\", userId), {\n      ...profileData,\n      createdAt: serverTimestamp(),\n      updatedAt: serverTimestamp(),\n    });\n\n    // Update user document to mark profile as completed\n    await updateDoc(doc(db, \"users\", userId), {\n      profileCompleted: true,\n    });\n\n    return true;\n  } catch (error) {\n    throw new Error(\"Failed to create company profile: \" + error.message);\n  }\n};\n\n/**\n * Get a student profile\n * @param {string} userId - User ID\n * @returns {Promise<Object>} - Student profile data\n */\nexport const getStudentProfile = async (userId) => {\n  try {\n    const profileDoc = await getDoc(doc(db, \"studentProfiles\", userId));\n\n    if (!profileDoc.exists()) {\n      throw new Error(\"Student profile not found\");\n    }\n\n    return profileDoc.data();\n  } catch (error) {\n    throw new Error(\"Failed to fetch student profile: \" + error.message);\n  }\n};\n\n/**\n * Get a company profile\n * @param {string} userId - User ID\n * @returns {Promise<Object>} - Company profile data\n */\nexport const getCompanyProfile = async (userId) => {\n  try {\n    const profileDoc = await getDoc(doc(db, \"companyProfiles\", userId));\n\n    if (!profileDoc.exists()) {\n      throw new Error(\"Company profile not found\");\n    }\n\n    return profileDoc.data();\n  } catch (error) {\n    throw new Error(\"Failed to fetch company profile: \" + error.message);\n  }\n};\n\n/**\n * Upload profile image\n * @param {string} userId - User ID\n * @param {File} imageFile - Image file\n * @param {string} userType - 'student' or 'company'\n * @returns {Promise<string>} - Download URL of the uploaded image\n */\nexport const uploadProfileImage = async (userId, imageFile, userType) => {\n  try {\n    const storageRef = ref(storage, `profileImages/${userType}/${userId}`);\n    await uploadBytes(storageRef, imageFile);\n\n    const downloadURL = await getDownloadURL(storageRef);\n\n    // Update profile with image URL\n    const profileRef = doc(db, `${userType}Profiles`, userId);\n    await updateDoc(profileRef, {\n      profileImageUrl: downloadURL,\n      updatedAt: serverTimestamp(),\n    });\n\n    return downloadURL;\n  } catch (error) {\n    throw new Error(\"Failed to upload profile image: \" + error.message);\n  }\n};\n\n/**\n * Update student profile\n * @param {string} userId - User ID\n * @param {Object} updateData - Data to update\n * @returns {Promise<boolean>} - Success status\n */\nexport const updateStudentProfile = async (userId, updateData) => {\n  try {\n    const profileRef = doc(db, \"studentProfiles\", userId);\n\n    await updateDoc(profileRef, {\n      ...updateData,\n      updatedAt: serverTimestamp(),\n    });\n\n    return true;\n  } catch (error) {\n    throw new Error(\"Failed to update student profile: \" + error.message);\n  }\n};\n\n/**\n * Update company profile\n * @param {string} userId - User ID\n * @param {Object} updateData - Data to update\n * @returns {Promise<boolean>} - Success status\n */\nexport const updateCompanyProfile = async (userId, updateData) => {\n  try {\n    const profileRef = doc(db, \"companyProfiles\", userId);\n\n    await updateDoc(profileRef, {\n      ...updateData,\n      updatedAt: serverTimestamp(),\n    });\n\n    return true;\n  } catch (error) {\n    throw new Error(\"Failed to update company profile: \" + error.message);\n  }\n};\n\n","// src/components/ApplicationModal.js\nimport React, { useState, useEffect } from 'react';\nimport { doc, updateDoc, getDoc } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { getStudentProfile } from '../services/profileService';\n\nconst ApplicationModal = ({ application, isOpen, onClose, onUpdate }) => {\n  const [student, setStudent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(application.status);\n  const [feedback, setFeedback] = useState('');\n  const [updating, setUpdating] = useState(false);\n\n  useEffect(() => {\n    const fetchStudentProfile = async () => {\n      try {\n        const studentData = await getStudentProfile(application.studentId);\n        setStudent(studentData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching student:', error);\n        setLoading(false);\n      }\n    };\n\n    if (application.studentId) {\n      fetchStudentProfile();\n    }\n  }, [application.studentId]);\n\n  const handleStatusUpdate = async () => {\n    setUpdating(true);\n    try {\n      const applicationRef = doc(db, 'applications', application.id);\n      await updateDoc(applicationRef, {\n        status,\n        feedback,\n        lastUpdated: new Date().toISOString()\n      });\n      onUpdate();\n      onClose();\n    } catch (error) {\n      console.error('Error updating application:', error);\n      alert('Failed to update application');\n    } finally {\n      setUpdating(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div style={{\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'rgba(0,0,0,0.5)',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 1000\n    }}>\n      <div style={{\n        backgroundColor: 'white',\n        padding: '30px',\n        borderRadius: '16px',\n        width: '90%',\n        maxWidth: '800px',\n        maxHeight: '90vh',\n        overflowY: 'auto'\n      }}>\n        <h2 style={{ marginBottom: '20px' }}>Application Details</h2>\n        \n        {loading ? (\n          <p>Loading student information...</p>\n        ) : student ? (\n          <div style={{ marginBottom: '30px' }}>\n            <h3>Student Information</h3>\n            <div style={{ background: '#f8fafc', padding: '15px', borderRadius: '8px', marginTop: '10px' }}>\n              <p><strong>Name:</strong> {student.fullName}</p>\n              <p><strong>Email:</strong> {student.email}</p>\n              <p><strong>Education:</strong> {student.education}</p>\n              <div style={{ marginTop: '10px' }}>\n                <strong>Skills:</strong>\n                <div style={{ display: 'flex', flexWrap: 'wrap', gap: '5px', marginTop: '5px' }}>\n                  {student.skills?.map(skill => (\n                    <span key={skill} className=\"feature-badge\" style={{ fontSize: '12px' }}>{skill}</span>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <p>Student information not available</p>\n        )}\n\n        <div style={{ marginBottom: '30px' }}>\n          <h3>Application Details</h3>\n          <div style={{ background: '#f8fafc', padding: '15px', borderRadius: '8px', marginTop: '10px' }}>\n            <p><strong>Project:</strong> {application.projectTitle}</p>\n            <p><strong>Applied on:</strong> {new Date(application.appliedAt).toLocaleDateString()}</p>\n            <p><strong>Cover Letter:</strong></p>\n            <p style={{ whiteSpace: 'pre-wrap', marginTop: '5px' }}>{application.coverLetter}</p>\n            \n            {application.applicationAnswer && (\n              <>\n                <p style={{ marginTop: '15px' }}><strong>Application Answer:</strong></p>\n                <p style={{ whiteSpace: 'pre-wrap', marginTop: '5px' }}>{application.applicationAnswer}</p>\n              </>\n            )}\n            \n            <p style={{ marginTop: '15px' }}><strong>Availability:</strong> {application.availability}</p>\n          </div>\n        </div>\n\n        {application.videoUrl && (\n          <div style={{ marginBottom: '30px' }}>\n            <h3>Video Introduction</h3>\n            <video \n              controls \n              style={{ width: '100%', borderRadius: '8px', marginTop: '10px' }}\n              src={application.videoUrl}\n            >\n              Your browser does not support the video tag.\n            </video>\n          </div>\n        )}\n\n        <div style={{ marginBottom: '30px' }}>\n          <h3>Update Status</h3>\n          <div style={{ display: 'flex', gap: '15px', marginTop: '10px' }}>\n            <select\n              value={status}\n              onChange={(e) => setStatus(e.target.value)}\n              style={{ padding: '8px', borderRadius: '8px', border: '1px solid #ddd', flex: '1' }}\n            >\n              <option value=\"pending\">Pending</option>\n              <option value=\"accepted\">Accepted</option>\n              <option value=\"rejected\">Rejected</option>\n            </select>\n          </div>\n          \n          <textarea\n            placeholder=\"Add feedback for the student (optional)\"\n            value={feedback}\n            onChange={(e) => setFeedback(e.target.value)}\n            style={{ \n              width: '100%', \n              padding: '12px', \n              borderRadius: '8px', \n              border: '1px solid #ddd', \n              marginTop: '15px',\n              minHeight: '100px'\n            }}\n          />\n        </div>\n\n        <div style={{ display: 'flex', justifyContent: 'flex-end', gap: '15px' }}>\n          <button \n            onClick={onClose}\n            className=\"btn btn-outline\"\n            style={{ padding: '10px 20px' }}\n          >\n            Close\n          </button>\n          <button \n            onClick={handleStatusUpdate}\n            disabled={updating}\n            className=\"btn btn-primary\"\n            style={{ padding: '10px 20px' }}\n          >\n            {updating ? 'Updating...' : 'Update Status'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ApplicationModal;","// src/pages/CompanyDashboard.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { collection, getDocs, query, where, orderBy, doc, updateDoc } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { AuthContext } from '../contexts/AuthContext';\nimport Navigation from '../components/Navigation';\nimport ApplicationModal from '../components/ApplicationModal';\n\nconst CompanyDashboard = () => {\n  const { currentUser } = useContext(AuthContext);\n  const [projects, setProjects] = useState([]);\n  const [applications, setApplications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedApplication, setSelectedApplication] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  \n  const fetchData = async () => {\n    if (currentUser) {\n      try {\n        console.log('Fetching data for company:', currentUser.uid);\n        \n        // Simplify the query for debugging - remove orderBy for now\n        const projectsQ = query(\n          collection(db, 'projects'),\n          where('companyId', '==', currentUser.uid)\n        );\n        \n        const projectsSnapshot = await getDocs(projectsQ);\n        console.log('Found projects:', projectsSnapshot.docs.length);\n        \n        const projectsList = projectsSnapshot.docs.map(doc => {\n          const data = doc.data();\n          console.log('Project data:', { id: doc.id, ...data });\n          return { id: doc.id, ...data };\n        });\n        \n        // Sort in JavaScript instead\n        projectsList.sort((a, b) => {\n          const aTime = a.createdAt?.seconds || 0;\n          const bTime = b.createdAt?.seconds || 0;\n          return bTime - aTime;\n        });\n        \n        setProjects(projectsList);\n        \n        // Fetch applications\n        const applicationsQ = query(\n          collection(db, 'applications'),\n          where('companyId', '==', currentUser.uid)\n        );\n        \n        const applicationsSnapshot = await getDocs(applicationsQ);\n        const applicationsList = applicationsSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        \n        // Sort applications\n        applicationsList.sort((a, b) => {\n          const aTime = a.createdAt?.seconds || 0;\n          const bTime = b.createdAt?.seconds || 0;\n          return bTime - aTime;\n        });\n        \n        setApplications(applicationsList);\n        setLoading(false);\n        \n      } catch (error) {\n        console.error('Detailed error:', error);\n        setError('Failed to load dashboard data: ' + error.message);\n        setLoading(false);\n      }\n    }\n  };\n  \n  useEffect(() => {\n    fetchData();\n  }, [currentUser]);\n  \n  const toggleProjectStatus = async (projectId, currentStatus) => {\n    try {\n      const newStatus = currentStatus === 'open' ? 'closed' : 'open';\n      const projectRef = doc(db, 'projects', projectId);\n      await updateDoc(projectRef, { status: newStatus });\n      \n      // Update local state\n      setProjects(projects.map(project => \n        project.id === projectId \n          ? { ...project, status: newStatus }\n          : project\n      ));\n    } catch (error) {\n      console.error('Error updating project status:', error);\n      setError('Failed to update project status');\n    }\n  };\n  \n  const formatDate = (timestamp) => {\n    if (!timestamp) return 'N/A';\n    \n    if (timestamp.seconds) {\n      return new Date(timestamp.seconds * 1000).toLocaleDateString();\n    } else {\n      return new Date(timestamp).toLocaleDateString();\n    }\n  };\n\n  const handleViewApplication = (application) => {\n    setSelectedApplication(application);\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setSelectedApplication(null);\n  };\n\n  const handleApplicationUpdate = () => {\n    // Refresh applications data after update\n    fetchData();\n  };\n  \n  return (\n    <>\n      <Navigation />\n      <div className=\"container\" style={{ padding: '60px 0' }}>\n        <div className=\"section-header\">\n          <h2>Company Dashboard</h2>\n          <p>Manage your projects and applications</p>\n        </div>\n        \n        {error && <div style={{ color: 'var(--danger)', marginBottom: '20px', padding: '10px', backgroundColor: 'rgba(239, 68, 68, 0.1)', borderRadius: '8px' }}>{error}</div>}\n        \n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: '40px', marginBottom: '30px' }}>\n          <h3>Your Projects</h3>\n          <Link to=\"/post-project\" className=\"btn btn-primary\">Post New Project</Link>\n        </div>\n        \n        {loading ? (\n          <div style={{ textAlign: 'center', padding: '50px 0' }}>Loading dashboard...</div>\n        ) : projects.length === 0 ? (\n          <div style={{ textAlign: 'center', padding: '50px 0' }}>\n            <p>You haven't posted any projects yet.</p>\n            <Link to=\"/post-project\" className=\"btn btn-primary\" style={{ marginTop: '20px' }}>Post Your First Project</Link>\n          </div>\n        ) : (\n          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '20px', marginTop: '20px' }}>\n            {projects.map(project => (\n              <div key={project.id} className=\"feature-card\" style={{ position: 'relative' }}>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', marginBottom: '15px' }}>\n                  <h4 style={{ flex: '1', marginRight: '10px' }}>{project.title}</h4>\n                  <button\n                    onClick={() => toggleProjectStatus(project.id, project.status)}\n                    className=\"btn\"\n                    style={{\n                      padding: '5px 15px',\n                      fontSize: '14px',\n                      background: project.status === 'open' ? 'var(--warning)' : 'var(--success)',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '20px'\n                    }}\n                  >\n                    {project.status === 'open' ? 'Close Project' : 'Reopen Project'}\n                  </button>\n                </div>\n                \n                <div className=\"feature-badge\" style={{ marginBottom: '10px' }}>{project.category}</div>\n                <p style={{ marginBottom: '10px' }}>{project.description.slice(0, 100)}...</p>\n                \n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: '15px' }}>\n                  <span className=\"feature-badge\" style={{\n                    background: project.status === 'open' ? 'rgba(34, 197, 94, 0.1)' : 'rgba(251, 191, 36, 0.1)',\n                    color: project.status === 'open' ? 'var(--success)' : 'var(--warning)'\n                  }}>\n                    {project.status === 'open' ? 'Active' : 'Closed'}\n                  </span>\n                  <span className=\"feature-badge\">Applications: {project.applicants?.length || 0}</span>\n                </div>\n                \n                <Link \n                  to={`/projects/${project.id}`} \n                  className=\"btn btn-outline\"\n                  style={{ marginTop: '15px', width: '100%', textAlign: 'center' }}\n                >\n                  View Details\n                </Link>\n              </div>\n            ))}\n          </div>\n        )}\n        \n        <div style={{ marginTop: '60px' }}>\n          <h3>Recent Applications</h3>\n          {applications.length === 0 ? (\n            <p style={{ marginTop: '20px' }}>No applications yet</p>\n          ) : (\n            <div style={{ display: 'grid', gap: '20px', marginTop: '20px' }}>\n              {applications.map(app => (\n                <div key={app.id} style={{ background: 'white', padding: '20px', borderRadius: '8px', boxShadow: '0 5px 15px rgba(0,0,0,0.05)' }}>\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <div>\n                      <h4 style={{ marginBottom: '5px' }}>Project: {app.projectTitle}</h4>\n                      <p style={{ color: '#666', fontSize: '14px' }}>Applied on: {app.appliedAt ? new Date(app.appliedAt).toLocaleDateString() : 'N/A'}</p>\n                    </div>\n                    <span className=\"feature-badge\" style={{\n                      background: app.status === 'pending' ? 'rgba(108, 99, 255, 0.1)' : \n                                 app.status === 'accepted' ? 'rgba(34, 197, 94, 0.1)' : \n                                 'rgba(239, 68, 68, 0.1)',\n                      color: app.status === 'pending' ? 'var(--primary)' : \n                             app.status === 'accepted' ? 'var(--success)' : \n                             'var(--danger)'\n                    }}>\n                      {app.status}\n                    </span>\n                  </div>\n                  \n                  <div style={{ marginTop: '10px' }}>\n                    <p><strong>Applicant Availability:</strong> {app.availability}</p>\n                    {app.applicationAnswer && <p><strong>Answer:</strong> {app.applicationAnswer.slice(0, 100)}...</p>}\n                  </div>\n                  \n                  <div style={{ marginTop: '10px', display: 'flex', gap: '10px' }}>\n                    <button \n                      onClick={() => handleViewApplication(app)}\n                      className=\"btn btn-outline\"\n                    >\n                      View Application\n                    </button>\n                    {app.videoUrl && (\n                      <button \n                        onClick={() => handleViewApplication(app)}\n                        className=\"btn btn-outline\"\n                      >\n                        View Video\n                      </button>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {selectedApplication && (\n        <ApplicationModal\n          application={selectedApplication}\n          isOpen={showModal}\n          onClose={handleCloseModal}\n          onUpdate={handleApplicationUpdate}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CompanyDashboard;","// src/components/ProjectCard.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getCompanyProfile } from '../services/profileService';\n\nconst ProjectCard = ({ project }) => {\n  const [company, setCompany] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchCompany = async () => {\n      try {\n        const companyData = await getCompanyProfile(project.companyId);\n        setCompany(companyData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching company:', error);\n        setLoading(false);\n      }\n    };\n    \n    if (project.companyId) {\n      fetchCompany();\n    }\n  }, [project.companyId]);\n\n  return (\n    <div className=\"feature-card\">\n      <div className=\"feature-badge\">{project.category}</div>\n      <h3>{project.title}</h3>\n      <p>{project.description.slice(0, 150)}...</p>\n      \n      {/* Company Information Section */}\n      {loading ? (\n        <div style={{ margin: '15px 0', color: '#666' }}>Loading company info...</div>\n      ) : company && (\n        <div style={{ margin: '15px 0', padding: '10px', background: '#f8fafc', borderRadius: '8px' }}>\n          <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\n            <div style={{ \n              width: '30px',\n              height: '30px',\n              borderRadius: '50%',\n              background: 'var(--secondary)',\n              color: 'white',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontSize: '14px'\n            }}>\n              {company.companyName ? company.companyName.charAt(0) : 'C'}\n            </div>\n            <div>\n              <div style={{ fontWeight: '500', fontSize: '14px' }}>{company.companyName || 'Company'}</div>\n              <div style={{ fontSize: '12px', color: '#666' }}>{company.industry || 'Industry'}</div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <div style={{ marginTop: '15px' }}>\n        <span className=\"feature-badge\" style={{ marginRight: '10px' }}>\n          {project.duration}\n        </span>\n        <span className=\"feature-badge\" style={{ \n          backgroundColor: project.status === 'open' ? 'rgba(34, 197, 94, 0.1)' : 'rgba(251, 191, 36, 0.1)',\n          color: project.status === 'open' ? 'var(--success)' : 'var(--warning)'\n        }}>\n          {project.status === 'open' ? 'Active' : 'Closed'}\n        </span>\n        <span className=\"feature-badge\">\n          {project.compensation ? `$${project.compensation}` : 'Experience Only'}\n        </span>\n      </div>\n      <Link to={`/projects/${project.id}`} className=\"btn btn-outline\" style={{ marginTop: '20px' }}>\n        View Details\n      </Link>\n    </div>\n  );\n};\n\nexport default ProjectCard;","// src/pages/ProjectListings.js\nimport React, { useState, useEffect } from 'react';\nimport { collection, getDocs, query, where, orderBy } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport Navigation from '../components/Navigation';\nimport ProjectCard from '../components/ProjectCard';\n\nconst ProjectListings = () => {\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [error, setError] = useState('');\n  \n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        // Simple query without complex filtering or ordering\n        const projectsRef = collection(db, 'projects');\n        console.log(\"Fetching projects from collection:\", projectsRef.path);\n        \n        const querySnapshot = await getDocs(projectsRef);\n        console.log(\"Projects collection exists:\", !querySnapshot.empty);\n        console.log(\"Number of documents found:\", querySnapshot.size);\n        \n        // Get all projects\n        let projectsList = querySnapshot.docs.map(doc => {\n          console.log(\"Document ID:\", doc.id, \"Document data:\", doc.data());\n          return {\n            id: doc.id,\n            ...doc.data()\n          };\n        });\n        \n        console.log(\"Query returned:\", projectsList.length, \"documents\");\n        \n        // Apply filters in memory\n        if (filter !== 'all') {\n          projectsList = projectsList.filter(project => project.category === filter);\n        }\n        \n        // Sort by createdAt\n        projectsList.sort((a, b) => {\n          // Handle both Firestore timestamps and regular dates\n          const timeA = a.createdAt?.seconds ? new Date(a.createdAt.seconds * 1000) : new Date(a.createdAt);\n          const timeB = b.createdAt?.seconds ? new Date(b.createdAt.seconds * 1000) : new Date(b.createdAt);\n          return timeB - timeA; // Descending order\n        });\n        \n        // If there's a search term, filter projects by title or description\n        const filteredProjects = searchTerm \n          ? projectsList.filter(project => \n              project.title.toLowerCase().includes(searchTerm.toLowerCase()) || \n              project.description.toLowerCase().includes(searchTerm.toLowerCase())\n            )\n          : projectsList;\n          \n        console.log(\"Final filtered projects:\", filteredProjects.length);\n        setProjects(filteredProjects);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n        setLoading(false);\n      }\n    };\n    \n    fetchProjects();\n  }, [filter, searchTerm]);\n  \n  const categories = [\n    'all', \n    'Web Development', \n    'Mobile App', \n    'UI/UX Design', \n    'Marketing', \n    'Data Analysis', \n    'Content Creation'\n  ];\n  \n  return (\n    <>\n      <Navigation />\n      <div className=\"container\" style={{ padding: '80px 0' }}>\n        <div className=\"section-header\">\n          <div className=\"feature-badge\">Explore Opportunities</div>\n          <h2>Available Projects</h2>\n          <p>Find the perfect project to enhance your skills and build your portfolio</p>\n        </div>\n        \n        <div style={{ margin: '40px 0', display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', gap: '20px' }}>\n          <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\n            {categories.map(category => (\n              <button \n                key={category}\n                onClick={() => setFilter(category)}\n                className={`btn ${filter === category ? 'btn-primary' : 'btn-outline'}`}\n                style={{ textTransform: 'capitalize' }}\n              >\n                {category}\n              </button>\n            ))}\n          </div>\n          \n          <div>\n            <input \n              type=\"text\"\n              placeholder=\"Search projects...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              style={{ padding: '12px 20px', borderRadius: '50px', border: '1px solid #ddd', width: '300px' }}\n            />\n          </div>\n        </div>\n        \n        {error && (\n          <div style={{ backgroundColor: 'rgba(239, 68, 68, 0.1)', color: 'var(--danger)', padding: '15px', borderRadius: '8px', marginBottom: '20px' }}>\n            Error: {error}\n          </div>\n        )}\n        \n        {loading ? (\n          <div style={{ textAlign: 'center', padding: '50px 0' }}>Loading projects...</div>\n        ) : projects.length === 0 ? (\n          <div style={{ textAlign: 'center', padding: '50px 0' }}>\n            No projects found. Please try a different filter or search term.\n          </div>\n        ) : (\n          <div className=\"feature-grid\">\n            {projects.map(project => (\n              <ProjectCard key={project.id} project={project} />\n            ))}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ProjectListings;","// src/components/VideoRecorder.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { storage } from '../firebase';\n\nconst VideoRecorder = ({ userId, projectId, onVideoReady }) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [videoBlob, setVideoBlob] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState('');\n  const [recordingTime, setRecordingTime] = useState(0);\n  \n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const streamRef = useRef(null);\n  const timerRef = useRef(null);\n\n  const MAX_RECORDING_TIME = 120; // 2 minutes in seconds\n\n  useEffect(() => {\n    return () => {\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n\n  const startRecording = async () => {\n    try {\n      setError('');\n      const stream = await navigator.mediaDevices.getUserMedia({ \n        video: true, \n        audio: true \n      });\n      \n      streamRef.current = stream;\n      videoRef.current.srcObject = stream;\n      \n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      \n      const chunks = [];\n      mediaRecorder.ondataavailable = (e) => chunks.push(e.data);\n      mediaRecorder.onstop = () => {\n        const blob = new Blob(chunks, { type: 'video/webm' });\n        setVideoBlob(blob);\n        stream.getTracks().forEach(track => track.stop());\n      };\n      \n      mediaRecorder.start();\n      setIsRecording(true);\n      \n      // Start timer\n      setRecordingTime(0);\n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => {\n          if (prev >= MAX_RECORDING_TIME) {\n            stopRecording();\n            return prev;\n          }\n          return prev + 1;\n        });\n      }, 1000);\n      \n    } catch (err) {\n      setError('Camera access denied or not available');\n      console.error('Error accessing camera:', err);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    }\n  };\n\n  const uploadVideo = async () => {\n    if (!videoBlob) return;\n    \n    setUploading(true);\n    try {\n      const filename = `applications/${userId}/${projectId}/video_${Date.now()}.webm`;\n      const storageRef = ref(storage, filename);\n      \n      await uploadBytes(storageRef, videoBlob);\n      const downloadURL = await getDownloadURL(storageRef);\n      \n      onVideoReady(downloadURL);\n    } catch (err) {\n      setError('Failed to upload video');\n      console.error('Error uploading video:', err);\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div style={{ marginBottom: '25px' }}>\n      <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>\n        Video Introduction (Required)\n      </label>\n      \n      {error && (\n        <div style={{ color: 'var(--danger)', marginBottom: '8px', padding: '10px', backgroundColor: 'rgba(239, 68, 68, 0.1)', borderRadius: '8px' }}>\n          {error}\n        </div>\n      )}\n      \n      <div style={{ \n        border: '1px solid #ddd', \n        borderRadius: '8px', \n        padding: '15px', \n        marginBottom: '15px',\n        backgroundColor: '#f8fafc'\n      }}>\n        <video \n          ref={videoRef} \n          autoPlay \n          muted \n          style={{ \n            width: '100%', \n            borderRadius: '8px', \n            backgroundColor: '#000',\n            maxHeight: '300px'\n          }}\n        />\n        \n        {isRecording && (\n          <div style={{ \n            textAlign: 'center', \n            marginTop: '10px',\n            color: 'var(--danger)',\n            fontWeight: '500'\n          }}>\n            Recording: {formatTime(recordingTime)} / {formatTime(MAX_RECORDING_TIME)}\n          </div>\n        )}\n      </div>\n      \n      <div style={{ display: 'flex', gap: '10px', marginBottom: '15px' }}>\n        {!isRecording && !videoBlob && (\n          <button \n            onClick={startRecording}\n            className=\"btn btn-primary\"\n            style={{ flex: '1' }}\n          >\n            Start Recording\n          </button>\n        )}\n        \n        {isRecording && (\n          <button \n            onClick={stopRecording}\n            className=\"btn btn-warning\"\n            style={{ flex: '1' }}\n          >\n            Stop Recording\n          </button>\n        )}\n        \n        {videoBlob && !uploading && (\n          <>\n            <button \n              onClick={() => setVideoBlob(null)}\n              className=\"btn btn-outline\"\n              style={{ flex: '1' }}\n            >\n              Record Again\n            </button>\n            <button \n              onClick={uploadVideo}\n              className=\"btn btn-primary\"\n              style={{ flex: '1' }}\n            >\n              Save Video\n            </button>\n          </>\n        )}\n        \n        {uploading && (\n          <button \n            disabled\n            className=\"btn btn-primary\"\n            style={{ flex: '1' }}\n          >\n            Uploading...\n          </button>\n        )}\n      </div>\n      \n      <p style={{ fontSize: '14px', color: '#666' }}>\n        Record a 2-minute introduction. Introduce yourself and explain why you're a good fit for this project.\n      </p>\n    </div>\n  );\n};\n\nexport default VideoRecorder;","// src/pages/ProjectDetail.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { getProjectById } from '../services/projectService';\nimport { getCompanyProfile } from '../services/profileService';\nimport { createApplication } from '../services/applicationService';\nimport { AuthContext } from '../contexts/AuthContext';\nimport Navigation from '../components/Navigation';\nimport VideoRecorder from '../components/VideoRecorder';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { storage, db } from '../firebase';\nimport { doc, updateDoc, arrayUnion } from 'firebase/firestore';\n\nconst ProjectDetail = () => {\n  const { id } = useParams();\n  const { currentUser, userType } = useContext(AuthContext);\n  const navigate = useNavigate();\n  \n  const [project, setProject] = useState(null);\n  const [company, setCompany] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [showApplicationForm, setShowApplicationForm] = useState(false);\n  const [coverLetter, setCoverLetter] = useState('');\n  const [availability, setAvailability] = useState('');\n  const [applicationAnswer, setApplicationAnswer] = useState('');\n  const [videoFile, setVideoFile] = useState(null);\n  const [videoUrl, setVideoUrl] = useState('');\n  const [videoUploading, setVideoUploading] = useState(false);\n  const [videoError, setVideoError] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [applicationSuccess, setApplicationSuccess] = useState(false);\n  \n  useEffect(() => {\n    const fetchProjectData = async () => {\n      try {\n        // Fetch project details\n        const projectData = await getProjectById(id);\n        setProject(projectData);\n        \n        // Fetch company details\n        const companyData = await getCompanyProfile(projectData.companyId);\n        setCompany(companyData);\n        \n        setLoading(false);\n      } catch (error) {\n        setError('Error fetching project: ' + error.message);\n        setLoading(false);\n      }\n    };\n    \n    fetchProjectData();\n  }, [id]);\n  \n  const handleVideoUpload = (e) => {\n    const file = e.target.files[0];\n    const maxSize = 50 * 1024 * 1024; // 50MB limit\n    \n    if (file && file.type.startsWith('video/')) {\n      if (file.size > maxSize) {\n        setVideoError('Video file must be less than 50MB');\n        setVideoFile(null);\n      } else {\n        setVideoFile(file);\n        setVideoError('');\n      }\n    } else {\n      setVideoError('Please upload a valid video file');\n      setVideoFile(null);\n    }\n  };\n\n  const handleVideoReady = (url) => {\n    setVideoUrl(url);\n    setVideoFile(null);\n    setVideoError('');\n  };\n\n  const handleApply = async (e) => {\n    e.preventDefault();\n    \n    if (!currentUser) {\n      navigate('/login', { state: { from: `/projects/${id}` } });\n      return;\n    }\n    \n    try {\n      setSubmitting(true);\n      \n      let finalVideoUrl = videoUrl;\n      \n      // Upload video file if one was selected (not recorded)\n      if (videoFile) {\n        setVideoUploading(true);\n        const storageRef = ref(storage, `applications/${currentUser.uid}/${project.id}/video_${Date.now()}`);\n        const snapshot = await uploadBytes(storageRef, videoFile);\n        finalVideoUrl = await getDownloadURL(snapshot.ref);\n        setVideoUploading(false);\n      }\n      \n      // Prepare application data\n      const applicationData = {\n        projectId: id,\n        projectTitle: project.title,\n        studentId: currentUser.uid,\n        coverLetter: coverLetter,\n        availability: availability,\n        companyId: project.companyId,\n        appliedAt: new Date().toISOString(),\n        applicationAnswer: applicationAnswer,\n        videoUrl: finalVideoUrl,\n        status: 'pending'\n      };\n      \n      // Submit application\n      await createApplication(applicationData);\n      \n      // Update project's applicants array\n      const projectRef = doc(db, 'projects', id);\n      await updateDoc(projectRef, {\n        applicants: arrayUnion(applicationData)\n      });\n      \n      // Success state\n      setApplicationSuccess(true);\n      setShowApplicationForm(false);\n      setSubmitting(false);\n    } catch (error) {\n      setError('Failed to submit application: ' + error.message);\n      setSubmitting(false);\n    }\n  };\n  \n  // Format date\n  const formatDate = (timestamp) => {\n    if (!timestamp) return 'N/A';\n    \n    if (timestamp.seconds) {\n      // Firestore timestamp\n      return new Date(timestamp.seconds * 1000).toLocaleDateString();\n    } else {\n      // ISO string\n      return new Date(timestamp).toLocaleDateString();\n    }\n  };\n  \n  // Check if user already applied\n  const checkIfAlreadyApplied = () => {\n    if (!currentUser || !project) return false;\n    return project.applicants?.some(app => app.studentId === currentUser.uid);\n  };\n  \n  // Check if this is the user's own project\n  const isOwnProject = currentUser && project && userType === 'company' && project.companyId === currentUser.uid;\n  \n  return (\n    <>\n      <Navigation />\n      <div className=\"container\" style={{ padding: '60px 0' }}>\n        {loading ? (\n          <div style={{ textAlign: 'center', padding: '50px 0' }}>Loading project details...</div>\n        ) : error ? (\n          <div style={{ textAlign: 'center', padding: '50px 0', color: 'var(--danger)' }}>{error}</div>\n        ) : (\n          <div style={{ display: 'flex', gap: '30px', flexWrap: 'wrap' }}>\n            {/* Main Project Details */}\n            <div style={{ flex: '1', minWidth: '60%' }}>\n              <div style={{ background: 'white', padding: '30px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)', marginBottom: '30px' }}>\n                <div style={{ marginBottom: '20px' }}>\n                  <div className=\"feature-badge\" style={{ marginBottom: '15px' }}>{project.category}</div>\n                  <h2 style={{ marginBottom: '15px' }}>{project.title}</h2>\n                  \n                  <div style={{ display: 'flex', gap: '10px', marginBottom: '20px', flexWrap: 'wrap' }}>\n                    <span className=\"feature-badge\">{project.duration}</span>\n                    <span className=\"feature-badge\" style={{ background: project.status === 'open' ? 'rgba(34, 197, 94, 0.1)' : 'rgba(251, 191, 36, 0.1)', color: project.status === 'open' ? 'var(--success)' : 'var(--warning)' }}>\n                      {project.status === 'open' ? 'Open for Applications' : 'Applications Closed'}\n                    </span>\n                    <span className=\"feature-badge\">\n                      {project.isExperienceOnly ? 'Experience Only' : `$${project.compensation}`}\n                    </span>\n                  </div>\n                </div>\n                \n                <div style={{ marginBottom: '30px' }}>\n                  <h3 style={{ marginBottom: '15px' }}>Project Description</h3>\n                  <p style={{ whiteSpace: 'pre-wrap' }}>{project.description}</p>\n                </div>\n                \n                <div style={{ marginBottom: '30px' }}>\n                  <h3 style={{ marginBottom: '15px' }}>Required Skills</h3>\n                  <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\n                    {project.skills?.map(skill => (\n                      <span key={skill} className=\"feature-badge\">{skill}</span>\n                    ))}\n                  </div>\n                </div>\n                \n                {!isOwnProject && userType === 'student' && (\n                  <div style={{ marginTop: '30px' }}>\n                    {applicationSuccess ? (\n                      <div style={{ padding: '20px', borderRadius: '8px', background: 'rgba(34, 197, 94, 0.1)', color: 'var(--success)', marginBottom: '20px' }}>\n                        <h4 style={{ marginBottom: '10px' }}>Application Submitted!</h4>\n                        <p>Your application has been successfully submitted. The company will review it and respond soon.</p>\n                      </div>\n                    ) : checkIfAlreadyApplied() ? (\n                      <div style={{ padding: '20px', borderRadius: '8px', background: 'rgba(108, 99, 255, 0.1)', marginBottom: '20px' }}>\n                        <h4 style={{ marginBottom: '10px' }}>Already Applied</h4>\n                        <p>You have already applied to this project. Check your dashboard for application status.</p>\n                      </div>\n                    ) : project.status !== 'open' ? (\n                      <div style={{ padding: '20px', borderRadius: '8px', background: 'rgba(251, 191, 36, 0.1)', marginBottom: '20px' }}>\n                        <h4 style={{ marginBottom: '10px' }}>Project Closed</h4>\n                        <p>This project is no longer accepting applications.</p>\n                      </div>\n                    ) : (\n                      <button \n                        onClick={() => setShowApplicationForm(!showApplicationForm)} \n                        className=\"btn btn-primary\"\n                        style={{ width: '100%', padding: '15px' }}\n                      >\n                        {showApplicationForm ? 'Cancel Application' : 'Apply for this Project'}\n                      </button>\n                    )}\n                    \n                    {showApplicationForm && (\n                      <div style={{ marginTop: '30px' }}>\n                        <h3 style={{ marginBottom: '20px' }}>Submit Your Application</h3>\n                        \n                        <form onSubmit={handleApply}>\n                          {project.applicationRequirements?.question && (\n                            <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n                              <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>\n                                Application Question\n                              </label>\n                              <p style={{ marginBottom: '8px', color: '#555' }}>{project.applicationRequirements.question}</p>\n                              <textarea\n                                value={applicationAnswer}\n                                onChange={(e) => setApplicationAnswer(e.target.value)}\n                                required\n                                style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd', minHeight: '150px' }}\n                                placeholder=\"Your answer...\"\n                              ></textarea>\n                            </div>\n                          )}\n                          \n                          <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n                            <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Cover Letter</label>\n                            <textarea\n                              value={coverLetter}\n                              onChange={(e) => setCoverLetter(e.target.value)}\n                              required\n                              style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd', minHeight: '200px' }}\n                              placeholder=\"Introduce yourself and explain why you're a good fit for this project...\"\n                            ></textarea>\n                          </div>\n                          \n                          {project.applicationRequirements?.requireVideoIntro && (\n                            <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n                              <VideoRecorder\n                                userId={currentUser.uid}\n                                projectId={id}\n                                onVideoReady={handleVideoReady}\n                              />\n                              \n                              <div style={{ marginTop: '15px' }}>\n                                <p style={{ marginBottom: '8px', fontWeight: '500' }}>Or upload a video file:</p>\n                                {videoError && <div style={{ color: 'var(--danger)', marginBottom: '8px' }}>{videoError}</div>}\n                                <input\n                                  type=\"file\"\n                                  accept=\"video/*\"\n                                  onChange={handleVideoUpload}\n                                  style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                                />\n                                {videoFile && <div style={{ marginTop: '8px', color: 'var(--success)' }}>Video file selected: {videoFile.name}</div>}\n                                {videoUrl && <div style={{ marginTop: '8px', color: 'var(--success)' }}>Video recorded successfully</div>}\n                              </div>\n                            </div>\n                          )}\n                          \n                          <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n                            <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Your Availability</label>\n                            <input\n                              type=\"text\"\n                              value={availability}\n                              onChange={(e) => setAvailability(e.target.value)}\n                              required\n                              style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                              placeholder=\"E.g. 15-20 hours per week, evenings and weekends\"\n                            />\n                          </div>\n                          \n                          <button \n                            type=\"submit\"\n                            disabled={submitting || videoUploading}\n                            className=\"btn btn-primary\"\n                            style={{ width: '100%', padding: '15px' }}\n                          >\n                            {videoUploading ? 'Uploading Video...' : submitting ? 'Submitting Application...' : 'Submit Application'}\n                          </button>\n                        </form>\n                      </div>\n                    )}\n                  </div>\n                )}\n                \n                {isOwnProject && (\n                  <div style={{ marginTop: '30px', display: 'flex', gap: '15px' }}>\n                    <Link \n                      to={`/company/dashboard`} \n                      className=\"btn btn-outline\"\n                      style={{ flex: '1', padding: '15px', textAlign: 'center' }}\n                    >\n                      Back to Dashboard\n                    </Link>\n                    <button \n                      className=\"btn btn-primary\"\n                      style={{ flex: '1', padding: '15px' }}\n                      onClick={() => navigate(`/company/project/${project.id}`)}\n                    >\n                      Manage Applications\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n            \n            {/* Company Info Sidebar */}\n            <div style={{ flex: '0 0 300px' }}>\n              <div style={{ background: 'white', padding: '30px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)', marginBottom: '30px' }}>\n                <h3 style={{ marginBottom: '15px' }}>About the Company</h3>\n                \n                <div style={{ marginBottom: '20px', display: 'flex', alignItems: 'center' }}>\n                  <div style={{ \n                    width: '60px',\n                    height: '60px',\n                    borderRadius: '50%',\n                    background: 'var(--secondary)',\n                    color: 'white',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    fontSize: '24px',\n                    marginRight: '15px'\n                  }}>\n                    {company?.companyName ? company.companyName.charAt(0) : 'C'}\n                  </div>\n                  <div>\n                    <h4>{company?.companyName || 'Company'}</h4>\n                    <p style={{ fontSize: '14px', color: '#666' }}>{company?.industry || 'Industry'}</p>\n                  </div>\n                </div>\n                \n                <div style={{ marginBottom: '20px' }}>\n                  <p>{company?.companyDescription || 'No company description available.'}</p>\n                </div>\n                \n                <div style={{ marginBottom: '20px' }}>\n                  <div style={{ display: 'flex', gap: '10px', alignItems: 'center', marginBottom: '10px' }}>\n                    <span style={{ fontWeight: '500' }}>Location:</span>\n                    <span>{company?.location || 'Not specified'}</span>\n                  </div>\n                  <div style={{ display: 'flex', gap: '10px', alignItems: 'center', marginBottom: '10px' }}>\n                    <span style={{ fontWeight: '500' }}>Size:</span>\n                    <span>{company?.companySize || 'Not specified'}</span>\n                  </div>\n                  <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\n                    <span style={{ fontWeight: '500' }}>Website:</span>\n                    <a href={company?.companyWebsite} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: 'var(--primary)', textDecoration: 'none' }}>\n                      {company?.companyWebsite ? 'Visit Website' : 'Not available'}\n                    </a>\n                  </div>\n                </div>\n              </div>\n              \n              <div style={{ background: 'white', padding: '30px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)' }}>\n                <h3 style={{ marginBottom: '15px' }}>Project Details</h3>\n                \n                <div style={{ marginBottom: '15px' }}>\n                  <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\n                    <span style={{ fontWeight: '500' }}>Posted On:</span>\n                    <span>{formatDate(project.createdAt)}</span>\n                  </div>\n                  <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\n                    <span style={{ fontWeight: '500' }}>Duration:</span>\n                    <span>{project.duration}</span>\n                  </div>\n                  <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\n                    <span style={{ fontWeight: '500' }}>Compensation:</span>\n                    <span>{project.isExperienceOnly ? 'Experience Only' : `$${project.compensation}`}</span>\n                  </div>\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <span style={{ fontWeight: '500' }}>Status:</span>\n                    <span style={{ color: project.status === 'open' ? 'var(--success)' : 'var(--warning)' }}>\n                      {project.status === 'open' ? 'Open for Applications' : 'Applications Closed'}\n                    </span>\n                  </div>\n                </div>\n                \n                {!currentUser && (\n                  <Link to=\"/login\" className=\"btn btn-primary\" style={{ width: '100%' }}>\n                    Log In to Apply\n                  </Link>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ProjectDetail;","// src/services/projectService.js - Fix project service to correctly interact with Firestore\nimport { \n  collection, \n  addDoc, \n  getDocs, \n  getDoc, \n  doc, \n  query, \n  where, \n  orderBy, \n  updateDoc, \n  arrayUnion, \n  serverTimestamp,\n  deleteDoc\n} from 'firebase/firestore';\nimport { db } from '../firebase';\n\n// Create a new project\nexport const createProject = async (projectData) => {\n  console.log(\"Creating project:\", projectData);\n  try {\n    const projectRef = await addDoc(collection(db, 'projects'), {\n      ...projectData,\n      createdAt: serverTimestamp(),\n      status: 'open',\n      applicants: []\n    });\n    \n    console.log(\"Project created with ID:\", projectRef.id);\n    return projectRef.id;\n  } catch (error) {\n    console.error(\"Error creating project:\", error);\n    throw new Error('Failed to create project: ' + error.message);\n  }\n};\n\n// Get project by ID\nexport const getProjectById = async (projectId) => {\n  console.log(\"Getting project by ID:\", projectId);\n  try {\n    const projectDoc = await getDoc(doc(db, 'projects', projectId));\n    \n    if (!projectDoc.exists()) {\n      console.log(\"Project not found\");\n      throw new Error('Project not found');\n    }\n    \n    console.log(\"Project found:\", projectDoc.data());\n    return { id: projectDoc.id, ...projectDoc.data() };\n  } catch (error) {\n    console.error(\"Error fetching project:\", error);\n    throw new Error('Failed to fetch project: ' + error.message);\n  }\n};\n\n// Get all projects with optional filters\nexport const getProjects = async (filters = {}) => {\n  console.log(\"Getting projects with filters:\", filters);\n  try {\n    let projectsQuery = collection(db, 'projects');\n    \n    // Apply filters\n    if (filters.category && filters.category !== 'all') {\n      projectsQuery = query(projectsQuery, where('category', '==', filters.category));\n    }\n    \n    if (filters.companyId) {\n      projectsQuery = query(projectsQuery, where('companyId', '==', filters.companyId));\n    }\n    \n    if (filters.status) {\n      projectsQuery = query(projectsQuery, where('status', '==', filters.status));\n    }\n    \n    // Apply sorting\n    const sortField = filters.sortBy || 'createdAt';\n    const sortDirection = filters.sortDirection || 'desc';\n    projectsQuery = query(projectsQuery, orderBy(sortField, sortDirection));\n    \n    console.log(\"Executing Firestore query\");\n    const querySnapshot = await getDocs(projectsQuery);\n    const projects = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n    console.log(\"Projects found:\", projects.length);\n    return projects;\n  } catch (error) {\n    console.error(\"Error fetching projects:\", error);\n    throw new Error('Failed to fetch projects: ' + error.message);\n  }\n};","// src/services/applicationService.js\nimport {\n  collection,\n  addDoc,\n  getDocs,\n  getDoc,\n  doc,\n  query,\n  where,\n  orderBy,\n  updateDoc,\n  serverTimestamp,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { arrayUnion } from 'firebase/firestore';\n\n/**\n * Create a new application\n * @param {Object} applicationData - Application data\n * @returns {Promise<string>} - Application ID\n */\nexport const createApplication = async (applicationData) => {\n  try {\n    const applicationRef = await addDoc(collection(db, \"applications\"), {\n      ...applicationData,\n      status: \"pending\",\n      createdAt: serverTimestamp(),\n      lastUpdated: serverTimestamp(),\n    });\n\n    return applicationRef.id;\n  } catch (error) {\n    throw new Error(\"Failed to create application: \" + error.message);\n  }\n};\n\n/**\n * Get applications for a student\n * @param {string} studentId - Student ID\n * @returns {Promise<Array>} - Array of applications\n */\nexport const getStudentApplications = async (studentId) => {\n  try {\n    const applicationsQuery = query(\n      collection(db, \"applications\"),\n      where(\"studentId\", \"==\", studentId),\n      orderBy(\"createdAt\", \"desc\")\n    );\n\n    const querySnapshot = await getDocs(applicationsQuery);\n    return querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n  } catch (error) {\n    throw new Error(\"Failed to fetch student applications: \" + error.message);\n  }\n};\n\n/**\n * Get applications for a company's project\n * @param {string} projectId - Project ID\n * @returns {Promise<Array>} - Array of applications\n */\nexport const getProjectApplications = async (projectId) => {\n  try {\n    const applicationsQuery = query(\n      collection(db, \"applications\"),\n      where(\"projectId\", \"==\", projectId),\n      orderBy(\"createdAt\", \"desc\")\n    );\n\n    const querySnapshot = await getDocs(applicationsQuery);\n    return querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n  } catch (error) {\n    throw new Error(\"Failed to fetch project applications: \" + error.message);\n  }\n};\n\n/**\n * Get all applications for a company\n * @param {string} companyId - Company ID\n * @returns {Promise<Array>} - Array of applications\n */\nexport const getCompanyApplications = async (companyId) => {\n  try {\n    const applicationsQuery = query(\n      collection(db, \"applications\"),\n      where(\"companyId\", \"==\", companyId),\n      orderBy(\"createdAt\", \"desc\")\n    );\n\n    const querySnapshot = await getDocs(applicationsQuery);\n    return querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n  } catch (error) {\n    throw new Error(\"Failed to fetch company applications: \" + error.message);\n  }\n};\n\n/**\n * Update application status\n * @param {string} applicationId - Application ID\n * @param {string} status - New status ('pending', 'accepted', 'rejected', 'withdrawn')\n * @param {string} feedback - Optional feedback message\n * @returns {Promise<boolean>} - Success status\n */\nexport const updateApplicationStatus = async (\n  applicationId,\n  status,\n  feedback = \"\"\n) => {\n  try {\n    const applicationRef = doc(db, \"applications\", applicationId);\n\n    await updateDoc(applicationRef, {\n      status,\n      feedback,\n      lastUpdated: serverTimestamp(),\n    });\n\n    return true;\n  } catch (error) {\n    throw new Error(\"Failed to update application status: \" + error.message);\n  }\n};\n\n/**\n * Get application by ID\n * @param {string} applicationId - Application ID\n * @returns {Promise<Object>} - Application data\n */\nexport const getApplicationById = async (applicationId) => {\n  try {\n    const applicationDoc = await getDoc(doc(db, \"applications\", applicationId));\n\n    if (!applicationDoc.exists()) {\n      throw new Error(\"Application not found\");\n    }\n\n    return { id: applicationDoc.id, ...applicationDoc.data() };\n  } catch (error) {\n    throw new Error(\"Failed to fetch application: \" + error.message);\n  }\n};\n\n/**\n * Delete an application\n * @param {string} applicationId - Application ID\n * @returns {Promise<boolean>} - Success status\n */\nexport const deleteApplication = async (applicationId) => {\n  try {\n    await deleteDoc(doc(db, \"applications\", applicationId));\n    return true;\n  } catch (error) {\n    throw new Error(\"Failed to delete application: \" + error.message);\n  }\n};\n\n/**\n * Create application and update project applicants array\n * @param {Object} applicationData - Application data\n * @returns {Promise<string>} - Application ID\n */\nexport const createApplicationAndUpdateProject = async (applicationData) => {\n  try {\n    // Create application document\n    const applicationRef = await addDoc(collection(db, 'applications'), {\n      ...applicationData,\n      createdAt: serverTimestamp(),\n      status: 'pending'\n    });\n    \n    // Update project's applicants array\n    const projectRef = doc(db, 'projects', applicationData.projectId);\n    await updateDoc(projectRef, {\n      applicants: arrayUnion({\n        ...applicationData,\n        applicationId: applicationRef.id,\n        appliedAt: new Date().toISOString()\n      })\n    });\n    \n    return applicationRef.id;\n  } catch (error) {\n    throw new Error('Failed to create application: ' + error.message);\n  }\n};","// src/pages/CreateProfile.js\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, setDoc, updateDoc } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { AuthContext } from '../contexts/AuthContext';\nimport Navigation from '../components/Navigation';\n\nconst CreateProfile = () => {\n  const { currentUser, userType } = useContext(AuthContext);\n  const navigate = useNavigate();\n  \n  // Student fields\n  const [fullName, setFullName] = useState('');\n  const [bio, setBio] = useState('');\n  const [education, setEducation] = useState('');\n  const [skills, setSkills] = useState('');\n  const [portfolioUrl, setPortfolioUrl] = useState('');\n  const [linkedinUrl, setLinkedinUrl] = useState('');\n  const [githubUrl, setGithubUrl] = useState('');\n  \n  // Company fields\n  const [companyName, setCompanyName] = useState('');\n  const [contactName, setContactName] = useState('');\n  const [companyDescription, setCompanyDescription] = useState('');\n  const [industry, setIndustry] = useState('');\n  const [location, setLocation] = useState('');\n  const [companySize, setCompanySize] = useState('');\n  const [companyWebsite, setCompanyWebsite] = useState('');\n  const [contactEmail, setContactEmail] = useState('');\n  \n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    try {\n      setLoading(true);\n      setError('');\n      \n      const profileData = userType === 'student'\n        ? {\n            fullName,\n            email: currentUser.email,\n            bio,\n            education,\n            skills: skills.split(',').map(skill => skill.trim()),\n            portfolioUrl,\n            linkedinUrl,\n            githubUrl,\n            createdAt: new Date().toISOString()\n          }\n        : {\n            companyName,\n            contactName,\n            email: currentUser.email,\n            companyDescription,\n            industry,\n            location,\n            companySize,\n            companyWebsite,\n            contactEmail,\n            createdAt: new Date().toISOString()\n          };\n          \n      // Save profile with correct collection name\n      const collectionName = userType === 'student' ? 'studentProfiles' : 'companyProfiles';\n      await setDoc(doc(db, collectionName, currentUser.uid), profileData);\n      \n      // Update user document to mark profile as completed\n      const userRef = doc(db, 'users', currentUser.uid);\n      await updateDoc(doc(db, 'users', currentUser.uid), {\n        profileCompleted: true\n      });\n      // Navigate to appropriate dashboard\n      navigate(userType === 'student' ? '/student/dashboard' : '/company/dashboard');\n    } catch (error) {\n      setError('Failed to create profile: ' + error.message);\n      setLoading(false);\n    }\n  };\n  \n  const industries = [\n    'Technology',\n    'Healthcare',\n    'Finance',\n    'Education',\n    'E-commerce',\n    'Marketing',\n    'Consulting',\n    'Manufacturing',\n    'Other'\n  ];\n  \n  const companySizes = [\n    '1-10 employees',\n    '11-50 employees',\n    '51-200 employees',\n    '201-500 employees',\n    '501+ employees'\n  ];\n  \n  if (!userType) {\n    return (\n      <>\n        <Navigation />\n        <div className=\"container\" style={{ textAlign: 'center', padding: '50px 0' }}>\n          <p>Loading profile type...</p>\n        </div>\n      </>\n    );\n  }\n  \n  return (\n    <>\n      <Navigation />\n      <div className=\"container\" style={{ maxWidth: '800px', margin: '60px auto', padding: '40px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)', borderRadius: '16px' }}>\n        <div className=\"section-header\" style={{ textAlign: 'left', marginBottom: '40px' }}>\n          <div className=\"feature-badge\">\n            {userType === 'student' ? 'Student Profile' : 'Company Profile'}\n          </div>\n          <h2>Complete Your Profile</h2>\n          <p>\n            {userType === 'student' \n              ? 'Tell companies about your skills and experience'\n              : 'Share your company details with potential talent'\n            }\n          </p>\n        </div>\n        \n        {error && <div style={{ color: 'var(--danger)', marginBottom: '20px', padding: '10px', backgroundColor: 'rgba(239, 68, 68, 0.1)', borderRadius: '8px' }}>{error}</div>}\n        \n        <form onSubmit={handleSubmit}>\n          {userType === 'student' ? (\n            <>\n              <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Full Name</label>\n                <input\n                  type=\"text\"\n                  value={fullName}\n                  onChange={(e) => setFullName(e.target.value)}\n                  required\n                  style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                  placeholder=\"Enter your full name\"\n                />\n              </div>\n              \n              <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Bio</label>\n                <textarea\n                  value={bio}\n                  onChange={(e) => setBio(e.target.value)}\n                  required\n                  style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd', minHeight: '120px' }}\n                  placeholder=\"Tell us about yourself...\"\n                ></textarea>\n              </div>\n              \n              <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Education</label>\n                <input\n                  type=\"text\"\n                  value={education}\n                  onChange={(e) => setEducation(e.target.value)}\n                  required\n                  style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                  placeholder=\"E.g. Computer Science, University Name\"\n                />\n              </div>\n              \n              <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Skills (comma separated)</label>\n                <input\n                  type=\"text\"\n                  value={skills}\n                  onChange={(e) => setSkills(e.target.value)}\n                  required\n                  style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                  placeholder=\"E.g. React, JavaScript, Python\"\n                />\n              </div>\n              \n              <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Portfolio URL</label>\n                <input\n                  type=\"url\"\n                  value={portfolioUrl}\n                  onChange={(e) => setPortfolioUrl(e.target.value)}\n                  style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                  placeholder=\"Your portfolio website\"\n                />\n              </div>\n              \n              <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>LinkedIn URL</label>\n                <input\n                  type=\"url\"\n                  value={linkedinUrl}\n                  onChange={(e) => setLinkedinUrl(e.target.value)}\n                  style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                  placeholder=\"Your LinkedIn profile\"\n                />\n              </div>\n              \n              <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>GitHub URL</label>\n                <input\n                  type=\"url\"\n                  value={githubUrl}\n                  onChange={(e) => setGithubUrl(e.target.value)}\n                  style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                  placeholder=\"Your GitHub profile\"\n                />\n              </div>\n            </>\n          ) : (\n            <>\n              <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Company Name</label>\n                <input\n                  type=\"text\"\n                  value={companyName}\n                  onChange={(e) => setCompanyName(e.target.value)}\n                  required\n                  style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                  placeholder=\"Your company name\"\n                />\n              </div>\n              \n              <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Contact Person Name</label>\n                <input\n                  type=\"text\"\n                  value={contactName}\n                  onChange={(e) => setContactName(e.target.value)}\n                  required\n                  style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                  placeholder=\"Your name\"\n                />\n              </div>\n              \n              <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Company Description</label>\n                <textarea\n                  value={companyDescription}\n                  onChange={(e) => setCompanyDescription(e.target.value)}\n                  required\n                  style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd', minHeight: '120px' }}\n                  placeholder=\"Tell us about your company...\"\n                ></textarea>\n              </div>\n              \n              <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px', marginBottom: '25px' }}>\n                <div className=\"form-group\">\n                  <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Industry</label>\n                  <select\n                    value={industry}\n                    onChange={(e) => setIndustry(e.target.value)}\n                    required\n                    style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                  >\n                    <option value=\"\">Select industry</option>\n                    {industries.map(ind => (\n                      <option key={ind} value={ind}>{ind}</option>\n                    ))}\n                  </select>\n                </div>\n                \n                <div className=\"form-group\">\n                  <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Company Size</label>\n                  <select\n                    value={companySize}\n                    onChange={(e) => setCompanySize(e.target.value)}\n                    required\n                    style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                  >\n                    <option value=\"\">Select size</option>\n                    {companySizes.map(size => (\n                      <option key={size} value={size}>{size}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              \n              <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Location</label>\n                <input\n                  type=\"text\"\n                  value={location}\n                  onChange={(e) => setLocation(e.target.value)}\n                  required\n                  style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                  placeholder=\"City, Country\"\n                />\n              </div>\n              \n              <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Company Website</label>\n                <input\n                  type=\"url\"\n                  value={companyWebsite}\n                  onChange={(e) => setCompanyWebsite(e.target.value)}\n                  style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                  placeholder=\"https://www.company.com\"\n                />\n              </div>\n              \n              <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Contact Email</label>\n                <input\n                  type=\"email\"\n                  value={contactEmail}\n                  onChange={(e) => setContactEmail(e.target.value)}\n                  required\n                  style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                  placeholder=\"contact@company.com\"\n                />\n              </div>\n            </>\n          )}\n          \n          <button \n            type=\"submit\"\n            disabled={loading}\n            className=\"btn btn-primary\"\n            style={{ width: '100%', marginTop: '20px', padding: '15px' }}\n          >\n            {loading ? 'Creating Profile...' : 'Complete Profile'}\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default CreateProfile;","// src/pages/PostProject.js\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { collection, addDoc, serverTimestamp } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { AuthContext } from '../contexts/AuthContext';\nimport Navigation from '../components/Navigation';\n\nconst PostProject = () => {\n  const { currentUser } = useContext(AuthContext);\n  const navigate = useNavigate();\n  \n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('Web Development');\n  const [skills, setSkills] = useState('');\n  const [duration, setDuration] = useState('1-2 weeks');\n  const [compensation, setCompensation] = useState('');\n  const [isExperienceOnly, setIsExperienceOnly] = useState(false);\n  const [applicationQuestion, setApplicationQuestion] = useState('');\n  const [requireVideoIntro, setRequireVideoIntro] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  \n  const categories = [\n    'Web Development', \n    'Mobile App', \n    'UI/UX Design', \n    'Marketing', \n    'Data Analysis', \n    'Content Creation',\n    'Other'\n  ];\n  \n  const durationOptions = [\n    '1-2 weeks',\n    '2-4 weeks',\n    '1-2 months', \n    '3+ months'\n  ];\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    try {\n      setLoading(true);\n      setError('');\n      \n      const skillsArray = skills.split(',').map(skill => skill.trim());\n      \n      const projectData = {\n        title,\n        description,\n        category,\n        skills: skillsArray,\n        duration,\n        compensation: isExperienceOnly ? null : parseFloat(compensation),\n        isExperienceOnly,\n        companyId: currentUser.uid,\n        status: 'open',\n        createdAt: serverTimestamp(),\n        applicants: [],\n        applicationRequirements: {\n          question: applicationQuestion,\n          requireVideoIntro: requireVideoIntro\n        }\n      };\n      \n      await addDoc(collection(db, 'projects'), projectData);\n      \n      navigate('/company/dashboard');\n    } catch (error) {\n      setError('Failed to post project: ' + error.message);\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <>\n      <Navigation />\n      <div className=\"container\" style={{ maxWidth: '800px', margin: '60px auto', padding: '40px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)', borderRadius: '16px' }}>\n        <div className=\"section-header\" style={{ textAlign: 'left', marginBottom: '40px' }}>\n          <div className=\"feature-badge\">Create Project</div>\n          <h2>Post a New Project</h2>\n          <p>Share your project details and find the perfect student match</p>\n        </div>\n        \n        {error && <div style={{ color: 'var(--danger)', marginBottom: '20px', padding: '10px', backgroundColor: 'rgba(239, 68, 68, 0.1)', borderRadius: '8px' }}>{error}</div>}\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n            <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Project Title</label>\n            <input\n              type=\"text\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              required\n              style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n              placeholder=\"E.g. E-commerce Website Development\"\n            />\n          </div>\n          \n          <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n            <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Project Description</label>\n            <textarea\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n              style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd', minHeight: '150px' }}\n              placeholder=\"Describe the project, goals, and deliverables in detail\"\n            ></textarea>\n          </div>\n          \n          <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px', marginBottom: '25px' }}>\n            <div className=\"form-group\">\n              <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Category</label>\n              <select\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n                style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n              >\n                {categories.map(cat => (\n                  <option key={cat} value={cat}>{cat}</option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"form-group\">\n              <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Duration</label>\n              <select\n                value={duration}\n                onChange={(e) => setDuration(e.target.value)}\n                style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n              >\n                {durationOptions.map(option => (\n                  <option key={option} value={option}>{option}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n          \n          <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n            <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Required Skills (comma separated)</label>\n            <input\n              type=\"text\"\n              value={skills}\n              onChange={(e) => setSkills(e.target.value)}\n              required\n              style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n              placeholder=\"E.g. React, JavaScript, Firebase\"\n            />\n          </div>\n          \n          <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n            <label style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\n              <input\n                type=\"checkbox\"\n                checked={isExperienceOnly}\n                onChange={(e) => setIsExperienceOnly(e.target.checked)}\n                style={{ marginRight: '10px' }}\n              />\n              This is an experience-only project (no financial compensation)\n            </label>\n          </div>\n          \n          {!isExperienceOnly && (\n            <div className=\"form-group\" style={{ marginBottom: '25px' }}>\n              <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Compensation Amount ($)</label>\n              <input\n                type=\"number\"\n                value={compensation}\n                onChange={(e) => setCompensation(e.target.value)}\n                required={!isExperienceOnly}\n                min=\"0\"\n                step=\"0.01\"\n                style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                placeholder=\"Enter amount in USD\"\n              />\n            </div>\n          )}\n          \n          {/* Application Requirements Section */}\n          <div style={{ background: '#f8fafc', padding: '20px', borderRadius: '8px', marginBottom: '25px' }}>\n            <h3 style={{ marginBottom: '20px' }}>Application Requirements</h3>\n            \n            <div className=\"form-group\" style={{ marginBottom: '20px' }}>\n              <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Application Question</label>\n              <input\n                type=\"text\"\n                value={applicationQuestion}\n                onChange={(e) => setApplicationQuestion(e.target.value)}\n                required\n                style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                placeholder=\"E.g. What experience do you have with React development?\"\n              />\n            </div>\n            \n            <div className=\"form-group\" style={{ marginBottom: '20px' }}>\n              <label style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\n                <input\n                  type=\"checkbox\"\n                  checked={requireVideoIntro}\n                  onChange={(e) => setRequireVideoIntro(e.target.checked)}\n                  style={{ marginRight: '10px' }}\n                />\n                Require video introduction (2 minute max)\n              </label>\n            </div>\n          </div>\n          \n          <button \n            type=\"submit\"\n            disabled={loading}\n            className=\"btn btn-primary\"\n            style={{ width: '100%', marginTop: '20px', padding: '15px' }}\n          >\n            {loading ? 'Posting Project...' : 'Post Project'}\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default PostProject;","// src/pages/StudentProjectPortal.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../contexts/AuthContext';\nimport Navigation from '../components/Navigation';\nimport { doc, getDoc, collection, query, where, getDocs, updateDoc, addDoc, serverTimestamp } from 'firebase/firestore';\nimport { db, storage } from '../firebase';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\n\nconst StudentProjectPortal = () => {\n  const { projectId } = useParams();\n  const { currentUser } = useContext(AuthContext);\n  const navigate = useNavigate();\n  \n  const [project, setProject] = useState(null);\n  const [company, setCompany] = useState(null);\n  const [deliverables, setDeliverables] = useState([]);\n  const [activeDeliverable, setActiveDeliverable] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [submission, setSubmission] = useState({ content: '', file: null });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [activities, setActivities] = useState([]);\n\n    // Fetch project, company, and deliverables data\nuseEffect(() => {\n    const fetchProjectData = async () => {\n      try {\n        setLoading(true);\n        \n        // Get project data\n        const projectDoc = await getDoc(doc(db, 'projects', projectId));\n        if (!projectDoc.exists()) {\n          throw new Error('Project not found');\n        }\n        \n        const projectData = { id: projectDoc.id, ...projectDoc.data() };\n        setProject(projectData);\n        \n        // Get company data\n        const companyDoc = await getDoc(doc(db, 'companyProfiles', projectData.companyId));\n        if (companyDoc.exists()) {\n          setCompany({ id: companyDoc.id, ...companyDoc.data() });\n        }\n        \n        // Get deliverables\n        const deliverablesQuery = query(\n          collection(db, 'deliverables'),\n          where('projectId', '==', projectId)\n        );\n        \n        const deliverablesSnapshot = await getDocs(deliverablesQuery);\n        const deliverablesData = deliverablesSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        \n        // Sort deliverables by due date\n        deliverablesData.sort((a, b) => {\n          if (a.dueDate && b.dueDate) {\n            return new Date(a.dueDate) - new Date(b.dueDate);\n          }\n          return 0;\n        });\n        \n        setDeliverables(deliverablesData);\n        \n        // Set active deliverable (first incomplete or in-progress deliverable)\n        const currentDeliverable = deliverablesData.find(d => \n          d.status === 'pending' || d.status === 'in-progress'\n        ) || deliverablesData[0];\n        \n        setActiveDeliverable(currentDeliverable);\n        \n        // Get messages - directly inline\n        const messagesQuery = query(\n          collection(db, 'messages'),\n          where('projectId', '==', projectId)\n        );\n        \n        const messagesSnapshot = await getDocs(messagesQuery);\n        const messagesData = messagesSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        \n        // Sort messages by timestamp\n        messagesData.sort((a, b) => {\n          if (a.timestamp && b.timestamp) {\n            const aTime = a.timestamp.seconds ? a.timestamp.seconds * 1000 : new Date(a.timestamp).getTime();\n            const bTime = b.timestamp.seconds ? b.timestamp.seconds * 1000 : new Date(b.timestamp).getTime();\n            return aTime - bTime;\n          }\n          return 0;\n        });\n        \n        setMessages(messagesData);\n        \n        // Get activities - directly inline\n        const activitiesQuery = query(\n          collection(db, 'activities'),\n          where('projectId', '==', projectId)\n        );\n        \n        const activitiesSnapshot = await getDocs(activitiesQuery);\n        const activitiesData = activitiesSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        \n        // Sort activities by timestamp (newest first)\n        activitiesData.sort((a, b) => {\n          if (a.timestamp && b.timestamp) {\n            const aTime = a.timestamp.seconds ? a.timestamp.seconds * 1000 : new Date(a.timestamp).getTime();\n            const bTime = b.timestamp.seconds ? b.timestamp.seconds * 1000 : new Date(b.timestamp).getTime();\n            return bTime - aTime;\n          }\n          return 0;\n        });\n        \n        setActivities(activitiesData);\n        \n        // Set loading to false after all async operations complete\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching project data:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    \n    if (projectId && currentUser) {\n      fetchProjectData();\n    }\n  }, [projectId, currentUser]);\n\n // Submit a message\nconst handleSubmitMessage = async (e) => {\n    e.preventDefault();\n    \n    if (!newMessage.trim()) return;\n    \n    try {\n      const messageData = {\n        projectId,\n        senderId: currentUser.uid,\n        senderType: 'student',\n        content: newMessage,\n        timestamp: serverTimestamp(),\n        isRead: false\n      };\n      \n      await addDoc(collection(db, 'messages'), messageData);\n      \n      // Add activity\n      await addDoc(collection(db, 'activities'), {\n        projectId,\n        userId: currentUser.uid,\n        userType: 'student',\n        activityType: 'message',\n        content: 'sent a message',\n        timestamp: serverTimestamp()\n      });\n      \n      setNewMessage('');\n      \n      // Instead of calling fetchMessages and fetchActivities, fetch the data directly:\n      \n      // Fetch messages inline\n      const messagesQuery = query(\n        collection(db, 'messages'),\n        where('projectId', '==', projectId)\n      );\n      \n      const messagesSnapshot = await getDocs(messagesQuery);\n      const messagesData = messagesSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      \n      // Sort messages by timestamp\n      messagesData.sort((a, b) => {\n        if (a.timestamp && b.timestamp) {\n          const aTime = a.timestamp.seconds ? a.timestamp.seconds * 1000 : new Date(a.timestamp).getTime();\n          const bTime = b.timestamp.seconds ? b.timestamp.seconds * 1000 : new Date(b.timestamp).getTime();\n          return aTime - bTime;\n        }\n        return 0;\n      });\n      \n      setMessages(messagesData);\n      \n      // Fetch activities inline\n      const activitiesQuery = query(\n        collection(db, 'activities'),\n        where('projectId', '==', projectId)\n      );\n      \n      const activitiesSnapshot = await getDocs(activitiesQuery);\n      const activitiesData = activitiesSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      \n      // Sort activities by timestamp (newest first)\n      activitiesData.sort((a, b) => {\n        if (a.timestamp && b.timestamp) {\n          const aTime = a.timestamp.seconds ? a.timestamp.seconds * 1000 : new Date(a.timestamp).getTime();\n          const bTime = b.timestamp.seconds ? b.timestamp.seconds * 1000 : new Date(b.timestamp).getTime();\n          return bTime - aTime;\n        }\n        return 0;\n      });\n      \n      setActivities(activitiesData);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  \n  // Handle file change\n  const handleFileChange = (e) => {\n    if (e.target.files[0]) {\n      setSubmission({\n        ...submission,\n        file: e.target.files[0]\n      });\n    }\n  };\n  \n  // Submit deliverable\n  const handleSubmitDeliverable = async (e) => {\n    e.preventDefault();\n    \n    if (!activeDeliverable) return;\n    \n    try {\n      setIsSubmitting(true);\n      \n      let fileUrl = '';\n      \n      // Upload file if selected\n      if (submission.file) {\n        const storageRef = ref(storage, `submissions/${projectId}/${activeDeliverable.id}/${currentUser.uid}_${Date.now()}_${submission.file.name}`);\n        await uploadBytes(storageRef, submission.file);\n        fileUrl = await getDownloadURL(storageRef);\n      }\n      \n      // Create submission\n      const submissionData = {\n        deliverableId: activeDeliverable.id,\n        projectId,\n        studentId: currentUser.uid,\n        content: submission.content,\n        fileUrl: fileUrl || '',\n        submittedAt: serverTimestamp(),\n        status: 'submitted',\n        feedback: ''\n      };\n      \n      await addDoc(collection(db, 'submissions'), submissionData);\n      \n      // Update deliverable status\n      await updateDoc(doc(db, 'deliverables', activeDeliverable.id), {\n        status: 'submitted',\n        updatedAt: serverTimestamp()\n      });\n      \n      // Add activity\n      await addDoc(collection(db, 'activities'), {\n        projectId,\n        userId: currentUser.uid,\n        userType: 'student',\n        activityType: 'submission',\n        content: `submitted deliverable: ${activeDeliverable.title}`,\n        timestamp: serverTimestamp()\n      });\n      \n      // Reset form\n      setSubmission({ content: '', file: null });\n      \n      // Refresh data\n      const updatedDeliverable = { ...activeDeliverable, status: 'submitted' };\n      setActiveDeliverable(updatedDeliverable);\n      \n      const updatedDeliverables = deliverables.map(d => \n        d.id === activeDeliverable.id ? updatedDeliverable : d\n      );\n      \n      setDeliverables(updatedDeliverables);\n      // Fetch activities inline\n      const activitiesQuery = query(\n        collection(db, 'activities'),\n        where('projectId', '==', projectId)\n        );\n        \n      const activitiesSnapshot = await getDocs(activitiesQuery);\n      const activitiesData = activitiesSnapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n        }));\n        \n        // Sort activities by timestamp (newest first)\n        activitiesData.sort((a, b) => {\n            if (a.timestamp && b.timestamp) {\n            const aTime = a.timestamp.seconds ? a.timestamp.seconds * 1000 : new Date(a.timestamp).getTime();\n            const bTime = b.timestamp.seconds ? b.timestamp.seconds * 1000 : new Date(b.timestamp).getTime();\n            return bTime - aTime;\n            }\n            return 0;\n        });\n        \n        setActivities(activitiesData);\n      \n      setIsSubmitting(false);\n    } catch (error) {\n      console.error('Error submitting deliverable:', error);\n      setIsSubmitting(false);\n    }\n  };\n  \n  // Calculate project progress\n  const calculateProgress = () => {\n    if (!deliverables.length) return 0;\n    \n    const completedCount = deliverables.filter(d => \n      d.status === 'completed' || d.status === 'approved'\n    ).length;\n    \n    return Math.round((completedCount / deliverables.length) * 100);\n  };\n  \n  // Format date\n  const formatDate = (dateStr) => {\n    if (!dateStr) return 'No date set';\n    \n    try {\n      if (dateStr.seconds) {\n        // Firestore timestamp\n        return new Date(dateStr.seconds * 1000).toLocaleDateString();\n      }\n      return new Date(dateStr).toLocaleDateString();\n    } catch (e) {\n      return dateStr;\n    }\n  };\n  \n  // Get status class for styling\n  const getStatusClass = (status) => {\n    switch (status) {\n      case 'completed':\n      case 'approved':\n        return 'success';\n      case 'in-progress':\n      case 'submitted':\n        return 'primary';\n      case 'pending':\n        return 'warning';\n      case 'rejected':\n        return 'danger';\n      default:\n        return '';\n    }\n  };\n  \n  if (loading) {\n    return (\n      <>\n        <Navigation />\n        <div className=\"container\" style={{ padding: '60px 0', textAlign: 'center' }}>\n          <div>Loading project portal...</div>\n        </div>\n      </>\n    );\n  }\n  \n  if (error) {\n    return (\n      <>\n        <Navigation />\n        <div className=\"container\" style={{ padding: '60px 0', textAlign: 'center' }}>\n          <div style={{ color: 'var(--danger)' }}>{error}</div>\n          <button \n            onClick={() => navigate('/student/dashboard')} \n            className=\"btn btn-primary\"\n            style={{ marginTop: '20px' }}\n          >\n            Back to Dashboard\n          </button>\n        </div>\n      </>\n    );\n  }\n  \n  return (\n    <>\n      <Navigation />\n      <div className=\"container\" style={{ padding: '40px 0' }}>\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '30px' }}>\n          <div>\n            <h2 style={{ marginBottom: '5px' }}>{project?.title}</h2>\n            <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\n              <span className=\"feature-badge\">{project?.category}</span>\n              <span>With {company?.companyName || 'Company'}</span>\n            </div>\n          </div>\n          <button \n            onClick={() => navigate('/student/dashboard')} \n            className=\"btn btn-outline\"\n          >\n            Back to Dashboard\n          </button>\n        </div>\n        \n        {/* Progress Bar */}\n        <div style={{ background: 'white', padding: '20px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)', marginBottom: '30px' }}>\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px' }}>\n            <h3 style={{ margin: 0 }}>Project Progress</h3>\n            <span>{calculateProgress()}% Complete</span>\n          </div>\n          <div style={{ height: '8px', background: '#f1f5f9', borderRadius: '4px', overflow: 'hidden' }}>\n            <div \n              style={{ \n                height: '100%', \n                width: `${calculateProgress()}%`, \n                background: 'linear-gradient(to right, var(--gradient-start), var(--gradient-end))',\n                borderRadius: '4px',\n                transition: 'width 0.5s ease'\n              }}\n            ></div>\n          </div>\n          \n          <div style={{ display: 'flex', gap: '15px', marginTop: '20px', flexWrap: 'wrap' }}>\n            <div style={{ \n              flex: '1', \n              minWidth: '120px', \n              background: 'rgba(34, 197, 94, 0.1)', \n              color: 'var(--success)', \n              padding: '15px', \n              borderRadius: '8px', \n              textAlign: 'center' \n            }}>\n              <div style={{ fontSize: '24px', fontWeight: '700' }}>\n                {deliverables.filter(d => d.status === 'completed' || d.status === 'approved').length}\n              </div>\n              <div>Completed</div>\n            </div>\n            \n            <div style={{ \n              flex: '1', \n              minWidth: '120px', \n              background: 'rgba(108, 99, 255, 0.1)', \n              color: 'var(--primary)', \n              padding: '15px', \n              borderRadius: '8px', \n              textAlign: 'center' \n            }}>\n              <div style={{ fontSize: '24px', fontWeight: '700' }}>\n                {deliverables.filter(d => d.status === 'in-progress' || d.status === 'submitted').length}\n              </div>\n              <div>In Progress</div>\n            </div>\n            \n            <div style={{ \n              flex: '1', \n              minWidth: '120px', \n              background: '#f1f5f9', \n              color: 'var(--dark)', \n              padding: '15px', \n              borderRadius: '8px', \n              textAlign: 'center' \n            }}>\n              <div style={{ fontSize: '24px', fontWeight: '700' }}>\n                {deliverables.filter(d => d.status === 'pending').length}\n              </div>\n              <div>Not Started</div>\n            </div>\n          </div>\n        </div>\n        \n        <div style={{ display: 'flex', gap: '30px', flexWrap: 'wrap' }}>\n          {/* Left Column - Deliverables */}\n          <div style={{ flex: '1', minWidth: '300px' }}>\n            {/* Current Deliverable */}\n            {activeDeliverable && (\n              <div style={{ background: 'white', padding: '25px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)', marginBottom: '30px' }}>\n                <h3 style={{ marginBottom: '15px' }}>Current Deliverable</h3>\n                <div className=\"feature-badge\" style={{ marginBottom: '10px' }}>\n                  {activeDeliverable.status === 'pending' ? 'Not Started' : \n                   activeDeliverable.status === 'in-progress' ? 'In Progress' :\n                   activeDeliverable.status === 'submitted' ? 'Submitted' :\n                   activeDeliverable.status === 'completed' ? 'Completed' : \n                   activeDeliverable.status === 'approved' ? 'Approved' : \n                   activeDeliverable.status === 'rejected' ? 'Needs Revision' : \n                   activeDeliverable.status}\n                </div>\n                <h4 style={{ marginBottom: '10px' }}>{activeDeliverable.title}</h4>\n                <p style={{ marginBottom: '15px' }}>{activeDeliverable.description}</p>\n                \n                <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n                  <div>\n                    <span style={{ fontWeight: '500' }}>Due Date:</span> {formatDate(activeDeliverable.dueDate)}\n                  </div>\n                  <div className={`feature-badge ${getStatusClass(activeDeliverable.status)}`}>\n                    {activeDeliverable.status}\n                  </div>\n                </div>\n                \n                {(activeDeliverable.status === 'pending' || activeDeliverable.status === 'in-progress' || activeDeliverable.status === 'rejected') && (\n                  <form onSubmit={handleSubmitDeliverable}>\n                    <div className=\"form-group\" style={{ marginBottom: '15px' }}>\n                      <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Submission Notes</label>\n                      <textarea \n                        value={submission.content}\n                        onChange={(e) => setSubmission({ ...submission, content: e.target.value })}\n                        style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd', minHeight: '100px' }}\n                        placeholder=\"Describe your submission or add any notes for your mentor...\"\n                      ></textarea>\n                    </div>\n                    \n                    <div className=\"form-group\" style={{ marginBottom: '15px' }}>\n                      <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Upload File (optional)</label>\n                      <input \n                        type=\"file\" \n                        onChange={handleFileChange}\n                        style={{ width: '100%', padding: '10px', border: '1px solid #ddd', borderRadius: '8px' }}\n                      />\n                    </div>\n                    \n                    <button \n                      type=\"submit\"\n                      disabled={isSubmitting}\n                      className=\"btn btn-primary\"\n                      style={{ width: '100%' }}\n                    >\n                      {isSubmitting ? 'Submitting...' : (\n                        activeDeliverable.status === 'rejected' ? 'Resubmit Deliverable' : \n                        activeDeliverable.status === 'in-progress' ? 'Submit Deliverable' : \n                        'Start & Submit Deliverable'\n                      )}\n                    </button>\n                  </form>\n                )}\n                \n                {(activeDeliverable.status === 'submitted') && (\n                  <div style={{ padding: '15px', background: 'rgba(108, 99, 255, 0.1)', borderRadius: '8px' }}>\n                    <p>Your submission is under review. Check back later for feedback.</p>\n                  </div>\n                )}\n                \n                {(activeDeliverable.status === 'completed' || activeDeliverable.status === 'approved') && (\n                  <div style={{ padding: '15px', background: 'rgba(34, 197, 94, 0.1)', borderRadius: '8px' }}>\n                    <p style={{ fontWeight: '500', marginBottom: '5px' }}>Feedback:</p>\n                    <p>{activeDeliverable.feedback || 'No feedback provided yet.'}</p>\n                  </div>\n                )}\n              </div>\n            )}\n            \n            {/* All Deliverables */}\n            <div style={{ background: 'white', padding: '25px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)' }}>\n              <h3 style={{ marginBottom: '20px' }}>All Deliverables</h3>\n              \n              {deliverables.length === 0 ? (\n                <p>No deliverables have been assigned yet.</p>\n              ) : (\n                <div>\n                  {deliverables.map((deliverable, index) => (\n                    <div \n                      key={deliverable.id} \n                      style={{ \n                        padding: '15px',\n                        border: activeDeliverable?.id === deliverable.id ? '2px solid var(--primary)' : '1px solid #f1f5f9',\n                        borderRadius: '8px',\n                        marginBottom: index < deliverables.length - 1 ? '15px' : '0',\n                        cursor: 'pointer',\n                        background: activeDeliverable?.id === deliverable.id ? 'rgba(108, 99, 255, 0.05)' : 'white'\n                      }}\n                      onClick={() => setActiveDeliverable(deliverable)}\n                    >\n                      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '5px' }}>\n                        <span style={{ fontWeight: '500' }}>{deliverable.title}</span>\n                        <span className={`feature-badge ${getStatusClass(deliverable.status)}`} style={{ fontSize: '12px', padding: '3px 8px' }}>\n                          {deliverable.status}\n                        </span>\n                      </div>\n                      <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '14px', color: '#666' }}>\n                        <span>Due: {formatDate(deliverable.dueDate)}</span>\n                        <span>{deliverable.points} pts</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n          \n          {/* Right Column - Activities and Messages */}\n          <div style={{ flex: '1', minWidth: '300px' }}>\n            {/* Messages */}\n            <div style={{ background: 'white', padding: '25px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)', marginBottom: '30px' }}>\n              <h3 style={{ marginBottom: '20px' }}>Messages</h3>\n              \n              <div style={{ \n                maxHeight: '300px', \n                overflowY: 'auto', \n                marginBottom: '20px',\n                border: '1px solid #f1f5f9',\n                borderRadius: '8px',\n                padding: '15px'\n              }}>\n                {messages.length === 0 ? (\n                  <p style={{ textAlign: 'center', color: '#666' }}>No messages yet. Start a conversation with your mentor.</p>\n                ) : (\n                  messages.map(message => (\n                    <div \n                      key={message.id} \n                      style={{ \n                        marginBottom: '15px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: message.senderType === 'student' ? 'flex-end' : 'flex-start'\n                      }}\n                    >\n                      <div style={{ \n                        background: message.senderType === 'student' ? 'var(--primary)' : '#f1f5f9',\n                        color: message.senderType === 'student' ? 'white' : 'var(--dark)',\n                        padding: '10px 15px',\n                        borderRadius: '12px',\n                        maxWidth: '80%'\n                      }}>\n                        {message.content}\n                      </div>\n                      <div style={{ \n                        fontSize: '12px', \n                        color: '#666',\n                        marginTop: '4px'\n                      }}>\n                        {message.timestamp ? formatDate(message.timestamp) + ' ' + new Date(message.timestamp.seconds * 1000).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}) : 'Just now'}\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n              \n              <form onSubmit={handleSubmitMessage}>\n                <div style={{ display: 'flex', gap: '10px' }}>\n                  <input \n                    type=\"text\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    placeholder=\"Type a message to your mentor...\"\n                    style={{ \n                      flex: '1',\n                      padding: '12px',\n                      borderRadius: '8px',\n                      border: '1px solid #ddd'\n                    }}\n                  />\n                  <button \n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                    disabled={!newMessage.trim()}\n                  >\n                    Send\n                  </button>\n                </div>\n              </form>\n            </div>\n            \n            {/* Recent Activity */}\n            <div style={{ background: 'white', padding: '25px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)' }}>\n              <h3 style={{ marginBottom: '20px' }}>Recent Activity</h3>\n              \n              {activities.length === 0 ? (\n                <p>No recent activity.</p>\n              ) : (\n                <div>\n                  {activities.slice(0, 5).map(activity => (\n                    <div \n                      key={activity.id} \n                      style={{ \n                        padding: '12px',\n                        borderBottom: '1px solid #f1f5f9',\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: '10px'\n                      }}\n                    >\n                      <div style={{ \n                        width: '30px',\n                        height: '30px',\n                        borderRadius: '50%',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        fontSize: '14px',\n                        background: \n                          activity.activityType === 'submission' ? 'rgba(34, 197, 94, 0.1)' :\n                          activity.activityType === 'feedback' ? 'rgba(251, 191, 36, 0.1)' :\n                          activity.activityType === 'message' ? 'rgba(108, 99, 255, 0.1)' :\n                          '#f1f5f9',\n                        color:\n                          activity.activityType === 'submission' ? 'var(--success)' :\n                          activity.activityType === 'feedback' ? 'var(--warning)' :\n                          activity.activityType === 'message' ? 'var(--primary)' :\n                          'var(--dark)'\n                      }}>\n                        {activity.activityType === 'submission' ? '📄' :\n                         activity.activityType === 'feedback' ? '✓' :\n                         activity.activityType === 'message' ? '💬' : '📌'}\n                      </div>\n                      \n                      <div style={{ flex: '1' }}>\n                        <div style={{ fontSize: '14px' }}>\n                          <span style={{ fontWeight: '500' }}>\n                            {activity.userType === 'student' ? 'You' : company?.companyName || 'Mentor'}\n                          </span>{' '}\n                          {activity.content}\n                        </div>\n                        <div style={{ fontSize: '12px', color: '#666' }}>\n                          {activity.timestamp ? formatDate(activity.timestamp) + ' ' + new Date(activity.timestamp.seconds * 1000).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}) : 'Just now'}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default StudentProjectPortal;","// src/pages/CompanyProjectManagement.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../contexts/AuthContext';\nimport Navigation from '../components/Navigation';\nimport { doc, getDoc, collection, query, where, getDocs, updateDoc, setDoc, addDoc, serverTimestamp, arrayUnion, deleteDoc } from 'firebase/firestore';\nimport { db } from '../firebase';\n\nconst CompanyProjectManagement = () => {\n  const { projectId } = useParams();\n  const { currentUser } = useContext(AuthContext);\n  const navigate = useNavigate();\n  \n  const [project, setProject] = useState(null);\n  const [students, setStudents] = useState([]);\n  const [deliverables, setDeliverables] = useState([]);\n  const [pendingApplications, setPendingApplications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [submissions, setSubmissions] = useState([]);\n  const [activeStudent, setActiveStudent] = useState(null);\n  const [newDeliverable, setNewDeliverable] = useState({\n    title: '',\n    description: '',\n    dueDate: '',\n    points: 10,\n    status: 'pending'\n  });\n  const [newMessage, setNewMessage] = useState('');\n  const [activeTab, setActiveTab] = useState('overview');\n  const [isAddingDeliverable, setIsAddingDeliverable] = useState(false);\n  \n  // Fetch project data\n  useEffect(() => {\n    const fetchProjectData = async () => {\n      try {\n        setLoading(true);\n        \n        // Get project data\n        const projectDoc = await getDoc(doc(db, 'projects', projectId));\n        if (!projectDoc.exists()) {\n          throw new Error('Project not found');\n        }\n        \n        const projectData = { id: projectDoc.id, ...projectDoc.data() };\n        setProject(projectData);\n        \n        // Get enrolled students\n        const enrolledStudentsIds = projectData.enrolledStudents || [];\n        \n        if (enrolledStudentsIds.length > 0) {\n          const studentsData = [];\n          \n          for (const studentId of enrolledStudentsIds) {\n            const studentDoc = await getDoc(doc(db, 'studentProfiles', studentId));\n            if (studentDoc.exists()) {\n              studentsData.push({ id: studentDoc.id, ...studentDoc.data() });\n            }\n          }\n          \n          setStudents(studentsData);\n          \n          // Set first student as active if none is selected\n          if (studentsData.length > 0 && !activeStudent) {\n            setActiveStudent(studentsData[0]);\n          }\n        }\n        \n        // Get deliverables\n        const deliverablesQuery = query(\n          collection(db, 'deliverables'),\n          where('projectId', '==', projectId)\n        );\n        \n        const deliverablesSnapshot = await getDocs(deliverablesQuery);\n        const deliverablesData = deliverablesSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        \n        // Sort deliverables by due date\n        deliverablesData.sort((a, b) => {\n          if (a.dueDate && b.dueDate) {\n            const aDate = a.dueDate.seconds ? new Date(a.dueDate.seconds * 1000) : new Date(a.dueDate);\n            const bDate = b.dueDate.seconds ? new Date(b.dueDate.seconds * 1000) : new Date(b.dueDate);\n            return aDate - bDate;\n          }\n          return 0;\n        });\n        \n        setDeliverables(deliverablesData);\n        \n        // Get pending applications\n        const applicationsQuery = query(\n          collection(db, 'applications'),\n          where('projectId', '==', projectId),\n          where('status', '==', 'pending')\n        );\n        \n        const applicationsSnapshot = await getDocs(applicationsQuery);\n        const applicationsData = applicationsSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        \n        // Fetch student profiles for applications\n        const applicationsWithProfiles = await Promise.all(\n          applicationsData.map(async (app) => {\n            const studentDoc = await getDoc(doc(db, 'studentProfiles', app.studentId));\n            if (studentDoc.exists()) {\n              return {\n                ...app,\n                studentProfile: { id: studentDoc.id, ...studentDoc.data() }\n              };\n            }\n            return app;\n          })\n        );\n        \n        setPendingApplications(applicationsWithProfiles);\n        \n        // Get messages for active student\n        if (activeStudent) {\n          await fetchMessages(activeStudent.id);\n        }\n        \n        // Get submissions\n        await fetchSubmissions();\n        \n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching project data:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    \n    if (projectId && currentUser) {\n      fetchProjectData();\n    }\n  }, [projectId, currentUser, activeStudent?.id]);\n  \n  // Fetch messages for a specific student\n  const fetchMessages = async (studentId) => {\n    try {\n      const messagesQuery = query(\n        collection(db, 'messages'),\n        where('projectId', '==', projectId),\n        where('participants', 'array-contains', studentId)\n      );\n      \n      const messagesSnapshot = await getDocs(messagesQuery);\n      const messagesData = messagesSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      \n      // Sort messages by timestamp\n      messagesData.sort((a, b) => {\n        if (a.timestamp && b.timestamp) {\n          const aTime = a.timestamp.seconds ? a.timestamp.seconds * 1000 : new Date(a.timestamp).getTime();\n          const bTime = b.timestamp.seconds ? b.timestamp.seconds * 1000 : new Date(b.timestamp).getTime();\n          return aTime - bTime;\n        }\n        return 0;\n      });\n      \n      setMessages(messagesData);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  \n  // Fetch submissions for all deliverables\n  const fetchSubmissions = async () => {\n    try {\n      const submissionsQuery = query(\n        collection(db, 'submissions'),\n        where('projectId', '==', projectId)\n      );\n      \n      const submissionsSnapshot = await getDocs(submissionsQuery);\n      const submissionsData = submissionsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      \n      setSubmissions(submissionsData);\n    } catch (error) {\n      console.error('Error fetching submissions:', error);\n    }\n  };\n  \n  // Submit a message to a student\n  const handleSubmitMessage = async (e) => {\n    e.preventDefault();\n    \n    if (!newMessage.trim() || !activeStudent) return;\n    \n    try {\n      const messageData = {\n        projectId,\n        senderId: currentUser.uid,\n        senderType: 'company',\n        recipientId: activeStudent.id,\n        participants: [currentUser.uid, activeStudent.id],\n        content: newMessage,\n        timestamp: serverTimestamp(),\n        isRead: false\n      };\n      \n      await addDoc(collection(db, 'messages'), messageData);\n      \n      // Add activity\n      await addDoc(collection(db, 'activities'), {\n        projectId,\n        userId: currentUser.uid,\n        userType: 'company',\n        activityType: 'message',\n        content: `sent a message to ${activeStudent.firstName} ${activeStudent.lastName}`,\n        timestamp: serverTimestamp()\n      });\n      \n      setNewMessage('');\n      await fetchMessages(activeStudent.id);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  \n  // Add a new deliverable\n  const handleAddDeliverable = async (e) => {\n    e.preventDefault();\n    \n    try {\n      const deliverableData = {\n        projectId,\n        title: newDeliverable.title,\n        description: newDeliverable.description,\n        dueDate: newDeliverable.dueDate ? new Date(newDeliverable.dueDate) : null,\n        points: parseInt(newDeliverable.points) || 10,\n        status: 'pending',\n        createdAt: serverTimestamp(),\n        feedback: ''\n      };\n      \n      await addDoc(collection(db, 'deliverables'), deliverableData);\n      \n      // Add activity\n      await addDoc(collection(db, 'activities'), {\n        projectId,\n        userId: currentUser.uid,\n        userType: 'company',\n        activityType: 'deliverable',\n        content: `added a new deliverable: ${newDeliverable.title}`,\n        timestamp: serverTimestamp()\n      });\n      \n      // Reset form\n      setNewDeliverable({\n        title: '',\n        description: '',\n        dueDate: '',\n        points: 10,\n        status: 'pending'\n      });\n      \n      setIsAddingDeliverable(false);\n      \n      // Refresh deliverables\n      const deliverablesQuery = query(\n        collection(db, 'deliverables'),\n        where('projectId', '==', projectId)\n      );\n      \n      const deliverablesSnapshot = await getDocs(deliverablesQuery);\n      const deliverablesData = deliverablesSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      \n      // Sort deliverables by due date\n      deliverablesData.sort((a, b) => {\n        if (a.dueDate && b.dueDate) {\n          const aDate = a.dueDate.seconds ? new Date(a.dueDate.seconds * 1000) : new Date(a.dueDate);\n          const bDate = b.dueDate.seconds ? new Date(b.dueDate.seconds * 1000) : new Date(b.dueDate);\n          return aDate - bDate;\n        }\n        return 0;\n      });\n      \n      setDeliverables(deliverablesData);\n    } catch (error) {\n      console.error('Error adding deliverable:', error);\n    }\n  };\n  \n  // Accept student application\n  const handleAcceptApplication = async (application) => {\n    try {\n      // Update application status\n      await updateDoc(doc(db, 'applications', application.id), {\n        status: 'accepted',\n        updatedAt: serverTimestamp()\n      });\n      \n      // Add student to project enrolled students\n      await updateDoc(doc(db, 'projects', projectId), {\n        enrolledStudents: arrayUnion(application.studentId)\n      });\n      \n      // Add activity\n      await addDoc(collection(db, 'activities'), {\n        projectId,\n        userId: currentUser.uid,\n        userType: 'company',\n        activityType: 'enrollment',\n        content: `accepted ${application.studentProfile?.firstName} ${application.studentProfile?.lastName || 'student'}'s application`,\n        timestamp: serverTimestamp()\n      });\n      \n      // Refresh applications and enrolled students\n      const applicationsQuery = query(\n        collection(db, 'applications'),\n        where('projectId', '==', projectId),\n        where('status', '==', 'pending')\n      );\n      \n      const applicationsSnapshot = await getDocs(applicationsQuery);\n      const applicationsData = applicationsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      \n      const applicationsWithProfiles = await Promise.all(\n        applicationsData.map(async (app) => {\n          const studentDoc = await getDoc(doc(db, 'studentProfiles', app.studentId));\n          if (studentDoc.exists()) {\n            return {\n              ...app,\n              studentProfile: { id: studentDoc.id, ...studentDoc.data() }\n            };\n          }\n          return app;\n        })\n      );\n      \n      setPendingApplications(applicationsWithProfiles);\n      \n      // Refresh project data\n      const projectDoc = await getDoc(doc(db, 'projects', projectId));\n      const projectData = { id: projectDoc.id, ...projectDoc.data() };\n      setProject(projectData);\n      \n      // Refresh enrolled students\n      const enrolledStudentsIds = projectData.enrolledStudents || [];\n      \n      if (enrolledStudentsIds.length > 0) {\n        const studentsData = [];\n        \n        for (const studentId of enrolledStudentsIds) {\n          const studentDoc = await getDoc(doc(db, 'studentProfiles', studentId));\n          if (studentDoc.exists()) {\n            studentsData.push({ id: studentDoc.id, ...studentDoc.data() });\n          }\n        }\n        \n        setStudents(studentsData);\n      }\n    } catch (error) {\n      console.error('Error accepting application:', error);\n    }\n  };\n  \n  // Reject student application\n  const handleRejectApplication = async (application) => {\n    try {\n      // Update application status\n      await updateDoc(doc(db, 'applications', application.id), {\n        status: 'rejected',\n        updatedAt: serverTimestamp()\n      });\n      \n      // Refresh applications\n      const applicationsQuery = query(\n        collection(db, 'applications'),\n        where('projectId', '==', projectId),\n        where('status', '==', 'pending')\n      );\n      \n      const applicationsSnapshot = await getDocs(applicationsQuery);\n      const applicationsData = applicationsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      \n      const applicationsWithProfiles = await Promise.all(\n        applicationsData.map(async (app) => {\n          const studentDoc = await getDoc(doc(db, 'studentProfiles', app.studentId));\n          if (studentDoc.exists()) {\n            return {\n              ...app,\n              studentProfile: { id: studentDoc.id, ...studentDoc.data() }\n            };\n          }\n          return app;\n        })\n      );\n      \n      setPendingApplications(applicationsWithProfiles);\n    } catch (error) {\n      console.error('Error rejecting application:', error);\n    }\n  };\n  \n  // Provide feedback on a submission\n  const handleProvideFeedback = async (submission, feedback, status) => {\n    try {\n      // Update submission\n      await updateDoc(doc(db, 'submissions', submission.id), {\n        feedback,\n        status,\n        updatedAt: serverTimestamp()\n      });\n      \n      // Update corresponding deliverable status\n      const deliverableId = submission.deliverableId;\n      await updateDoc(doc(db, 'deliverables', deliverableId), {\n        status: status === 'approved' ? 'completed' : 'rejected',\n        feedback,\n        updatedAt: serverTimestamp()\n      });\n      \n      // Add activity\n      await addDoc(collection(db, 'activities'), {\n        projectId,\n        userId: currentUser.uid,\n        userType: 'company',\n        studentId: submission.studentId,\n        activityType: 'feedback',\n        content: `provided feedback on submission for ${deliverables.find(d => d.id === deliverableId)?.title || 'deliverable'}`,\n        timestamp: serverTimestamp()\n      });\n      \n      // Refresh submissions\n      await fetchSubmissions();\n      \n      // Refresh deliverables\n      const deliverablesQuery = query(\n        collection(db, 'deliverables'),\n        where('projectId', '==', projectId)\n      );\n      \n      const deliverablesSnapshot = await getDocs(deliverablesQuery);\n      const deliverablesData = deliverablesSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      \n      setDeliverables(deliverablesData);\n    } catch (error) {\n      console.error('Error providing feedback:', error);\n    }\n  };\n  \n  // Format date\n  const formatDate = (dateStr) => {\n    if (!dateStr) return 'No date set';\n    \n    try {\n      if (dateStr.seconds) {\n        // Firestore timestamp\n        return new Date(dateStr.seconds * 1000).toLocaleDateString();\n      }\n      return new Date(dateStr).toLocaleDateString();\n    } catch (e) {\n      return dateStr;\n    }\n  };\n  \n  // Get student submissions\n  const getStudentSubmissions = (studentId) => {\n    return submissions.filter(submission => submission.studentId === studentId);\n  };\n  \n  // Calculate student progress\n  const calculateStudentProgress = (studentId) => {\n    if (!deliverables.length) return 0;\n    \n    const studentSubmissions = getStudentSubmissions(studentId);\n    const completedCount = studentSubmissions.filter(submission => \n      submission.status === 'approved'\n    ).length;\n    \n    return Math.round((completedCount / deliverables.length) * 100);\n  };\n  \n  // Get status class for styling\n  const getStatusClass = (status) => {\n    switch (status) {\n      case 'completed':\n      case 'approved':\n        return 'success';\n      case 'in-progress':\n      case 'submitted':\n        return 'primary';\n      case 'pending':\n        return 'warning';\n      case 'rejected':\n        return 'danger';\n      default:\n        return '';\n    }\n  };\n  \n  if (loading) {\n    return (\n      <>\n        <Navigation />\n        <div className=\"container\" style={{ padding: '60px 0', textAlign: 'center' }}>\n          <div>Loading project management...</div>\n        </div>\n      </>\n    );\n  }\n  \n  if (error) {\n    return (\n      <>\n        <Navigation />\n        <div className=\"container\" style={{ padding: '60px 0', textAlign: 'center' }}>\n          <div style={{ color: 'var(--danger)' }}>{error}</div>\n          <button \n            onClick={() => navigate('/company/dashboard')} \n            className=\"btn btn-primary\"\n            style={{ marginTop: '20px' }}\n          >\n            Back to Dashboard\n          </button>\n        </div>\n      </>\n    );\n  }\n  \n  return (\n    <>\n      <Navigation />\n      <div className=\"container\" style={{ padding: '40px 0' }}>\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '30px' }}>\n          <div>\n            <h2 style={{ marginBottom: '5px' }}>{project?.title}</h2>\n            <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\n              <span className=\"feature-badge\">{project?.category}</span>\n              <span>Project Management</span>\n            </div>\n          </div>\n          <button \n            onClick={() => navigate('/company/dashboard')} \n            className=\"btn btn-outline\"\n          >\n            Back to Dashboard\n          </button>\n        </div>\n        \n        {/* Tab Navigation */}\n        <div style={{ display: 'flex', borderBottom: '1px solid #eee', marginBottom: '30px' }}>\n          <button \n            onClick={() => setActiveTab('overview')}\n            style={{ \n              padding: '12px 20px', \n              background: 'none', \n              border: 'none', \n              cursor: 'pointer',\n              borderBottom: activeTab === 'overview' ? '3px solid var(--primary)' : 'none',\n              fontWeight: activeTab === 'overview' ? '600' : '400',\n              color: activeTab === 'overview' ? 'var(--primary)' : 'inherit'\n            }}\n          >\n            Overview\n          </button>\n          <button \n            onClick={() => setActiveTab('students')}\n            style={{ \n              padding: '12px 20px', \n              background: 'none', \n              border: 'none', \n              cursor: 'pointer',\n              borderBottom: activeTab === 'students' ? '3px solid var(--primary)' : 'none',\n              fontWeight: activeTab === 'students' ? '600' : '400',\n              color: activeTab === 'students' ? 'var(--primary)' : 'inherit'\n            }}\n          >\n            Students {students.length > 0 && `(${students.length})`}\n          </button>\n          <button \n            onClick={() => setActiveTab('deliverables')}\n            style={{ \n              padding: '12px 20px', \n              background: 'none', \n              border: 'none', \n              cursor: 'pointer',\n              borderBottom: activeTab === 'deliverables' ? '3px solid var(--primary)' : 'none',\n              fontWeight: activeTab === 'deliverables' ? '600' : '400',\n              color: activeTab === 'deliverables' ? 'var(--primary)' : 'inherit'\n            }}\n          >\n            Deliverables {deliverables.length > 0 && `(${deliverables.length})`}\n          </button>\n          <button \n            onClick={() => setActiveTab('applications')}\n            style={{ \n              padding: '12px 20px', \n              background: 'none', \n              border: 'none', \n              cursor: 'pointer',\n              borderBottom: activeTab === 'applications' ? '3px solid var(--primary)' : 'none',\n              fontWeight: activeTab === 'applications' ? '600' : '400',\n              color: activeTab === 'applications' ? 'var(--primary)' : 'inherit'\n            }}\n          >\n            Applications {pendingApplications.length > 0 && `(${pendingApplications.length})`}\n          </button>\n        </div>\n        \n        {/* Overview Tab */}\n        {activeTab === 'overview' && (\n          <div>\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '20px', marginBottom: '30px' }}>\n              <div style={{ background: 'white', padding: '20px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)' }}>\n                <h3 style={{ marginBottom: '10px' }}>Project Info</h3>\n                <div style={{ marginBottom: '10px' }}>\n                  <strong>Status:</strong> {project?.status === 'open' ? 'Active' : project?.status}\n                </div>\n                <div style={{ marginBottom: '10px' }}>\n                  <strong>Posted:</strong> {formatDate(project?.createdAt)}\n                </div>\n                <div style={{ marginBottom: '10px' }}>\n                  <strong>Duration:</strong> {project?.duration}\n                </div>\n                <div>\n                  <strong>Compensation:</strong> {project?.isExperienceOnly ? 'Experience Only' : `${project?.compensation}`}\n                </div>\n              </div>\n              \n              <div style={{ background: 'white', padding: '20px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)' }}>\n                <h3 style={{ marginBottom: '10px' }}>Students</h3>\n                <div style={{ fontSize: '32px', fontWeight: '700', marginBottom: '10px' }}>\n                  {students.length}\n                </div>\n                <div style={{ marginBottom: '10px' }}>\n                  <strong>Active:</strong> {students.filter(s => true).length}\n                </div>\n                <button \n                  onClick={() => setActiveTab('students')}\n                  className=\"btn btn-outline\"\n                  style={{ width: '100%', marginTop: '10px' }}\n                >\n                  Manage Students\n                </button>\n              </div>\n              \n              <div style={{ background: 'white', padding: '20px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)' }}>\n                <h3 style={{ marginBottom: '10px' }}>Deliverables</h3>\n                <div style={{ fontSize: '32px', fontWeight: '700', marginBottom: '10px' }}>\n                  {deliverables.length}\n                </div>\n                <div style={{ marginBottom: '10px' }}>\n                  <strong>Completed:</strong> {deliverables.filter(d => d.status === 'completed').length}\n                </div>\n                <button \n                  onClick={() => setActiveTab('deliverables')}\n                  className=\"btn btn-outline\"\n                  style={{ width: '100%', marginTop: '10px' }}\n                >\n                  Manage Deliverables\n                </button>\n              </div>\n              \n              <div style={{ background: 'white', padding: '20px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)' }}>\n                <h3 style={{ marginBottom: '10px' }}>Applications</h3>\n                <div style={{ fontSize: '32px', fontWeight: '700', marginBottom: '10px' }}>\n                  {pendingApplications.length}\n                </div>\n                <div style={{ marginBottom: '10px' }}>\n                  <strong>Pending Review:</strong> {pendingApplications.length}\n                </div>\n                <button \n                  onClick={() => setActiveTab('applications')}\n                  className=\"btn btn-outline\"\n                  style={{ width: '100%', marginTop: '10px' }}\n                >\n                  Review Applications\n                </button>\n              </div>\n            </div>\n            \n            <div style={{ background: 'white', padding: '25px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)', marginBottom: '30px' }}>\n              <h3 style={{ marginBottom: '20px' }}>Project Description</h3>\n              <p style={{ whiteSpace: 'pre-wrap' }}>{project?.description}</p>\n              \n              <div style={{ marginTop: '20px' }}>\n                <h4 style={{ marginBottom: '10px' }}>Required Skills</h4>\n                <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\n                  {project?.skills?.map(skill => (\n                    <span key={skill} className=\"feature-badge\">{skill}</span>\n                  ))}\n                </div>\n              </div>\n            </div>\n            \n            <div style={{ background: 'white', padding: '25px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)' }}>\n              <h3 style={{ marginBottom: '20px' }}>Recent Submissions</h3>\n              \n              {submissions.length === 0 ? (\n                <p>No submissions yet.</p>\n              ) : (\n                <div>\n                  {submissions\n                    .sort((a, b) => {\n                      if (a.submittedAt && b.submittedAt) {\n                        const aTime = a.submittedAt.seconds ? a.submittedAt.seconds * 1000 : new Date(a.submittedAt).getTime();\n                        const bTime = b.submittedAt.seconds ? b.submittedAt.seconds * 1000 : new Date(b.submittedAt).getTime();\n                        return bTime - aTime; // Most recent first\n                      }\n                      return 0;\n                    })\n                    .slice(0, 5)\n                    .map(submission => {\n                      const student = students.find(s => s.id === submission.studentId);\n                      const deliverable = deliverables.find(d => d.id === submission.deliverableId);\n                      \n                      return (\n                        <div \n                          key={submission.id} \n                          style={{ \n                            padding: '15px',\n                            borderBottom: '1px solid #f1f5f9',\n                            display: 'flex',\n                            flexWrap: 'wrap',\n                            gap: '10px',\n                            alignItems: 'center',\n                            justifyContent: 'space-between'\n                          }}\n                        >\n                          <div>\n                            <div style={{ fontWeight: '500', marginBottom: '5px' }}>\n                              {student ? `${student.firstName} ${student.lastName}` : 'Student'} - {deliverable?.title || 'Deliverable'}\n                            </div>\n                            <div style={{ fontSize: '14px', color: '#666' }}>\n                              Submitted on {formatDate(submission.submittedAt)}\n                            </div>\n                          </div>\n                          \n                          <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\n                            <span className={`feature-badge ${getStatusClass(submission.status)}`}>\n                              {submission.status}\n                            </span>\n                            <button \n                              onClick={() => {\n                                setActiveTab('students');\n                                setActiveStudent(student);\n                              }}\n                              className=\"btn btn-outline\"\n                              style={{ padding: '8px 12px', fontSize: '14px' }}\n                            >\n                              Review\n                            </button>\n                          </div>\n                        </div>\n                      );\n                    })\n                  }\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        \n        {/* Students Tab */}\n        {activeTab === 'students' && (\n          <div style={{ display: 'flex', gap: '30px', flexWrap: 'wrap' }}>\n            {/* Student List */}\n            <div style={{ flex: '0 0 300px' }}>\n              <div style={{ background: 'white', padding: '25px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)' }}>\n                <h3 style={{ marginBottom: '20px' }}>Enrolled Students</h3>\n                \n                {students.length === 0 ? (\n                  <p>No students enrolled yet.</p>\n                ) : (\n                  <div>\n                    {students.map(student => (\n                      <div \n                        key={student.id} \n                        style={{ \n                          padding: '15px',\n                          border: activeStudent?.id === student.id ? '2px solid var(--primary)' : '1px solid #f1f5f9',\n                          borderRadius: '8px',\n                          marginBottom: '15px',\n                          cursor: 'pointer',\n                          background: activeStudent?.id === student.id ? 'rgba(108, 99, 255, 0.05)' : 'white',\n                          display: 'flex',\n                          alignItems: 'center',\n                          gap: '15px'\n                        }}\n                        onClick={() => setActiveStudent(student)}\n                      >\n                        <div style={{ \n                          width: '40px',\n                          height: '40px',\n                          borderRadius: '50%',\n                          background: 'var(--primary)',\n                          color: 'white',\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          fontSize: '16px',\n                          fontWeight: '500'\n                        }}>\n                          {student.firstName?.charAt(0) || 'S'}{student.lastName?.charAt(0) || ''}\n                        </div>\n                        \n                        <div style={{ flex: '1' }}>\n                          <div style={{ fontWeight: '500' }}>\n                            {student.firstName} {student.lastName}\n                          </div>\n                          <div style={{ fontSize: '14px', color: '#666' }}>\n                            Progress: {calculateStudentProgress(student.id)}%\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n            \n            {/* Student Details */}\n            <div style={{ flex: '1', minWidth: '300px' }}>\n              {activeStudent ? (\n                <>\n                  <div style={{ background: 'white', padding: '25px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)', marginBottom: '30px' }}>\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '20px', marginBottom: '20px' }}>\n                      <div style={{ \n                        width: '60px',\n                        height: '60px',\n                        borderRadius: '50%',\n                        background: 'var(--primary)',\n                        color: 'white',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        fontSize: '24px',\n                        fontWeight: '500'\n                      }}>\n                        {activeStudent.firstName?.charAt(0) || 'S'}{activeStudent.lastName?.charAt(0) || ''}\n                      </div>\n                      \n                      <div>\n                        <h3 style={{ marginBottom: '5px' }}>{activeStudent.firstName} {activeStudent.lastName}</h3>\n                        <div>{activeStudent.university || 'Student'}</div>\n                      </div>\n                    </div>\n                    \n                    <div style={{ marginBottom: '20px' }}>\n                      <div style={{ marginBottom: '10px' }}>\n                        <strong>Email:</strong> {activeStudent.email}\n                      </div>\n                      <div style={{ marginBottom: '10px' }}>\n                        <strong>Major:</strong> {activeStudent.major || 'Not specified'}\n                      </div>\n                      <div style={{ marginBottom: '10px' }}>\n                        <strong>Year:</strong> {activeStudent.year || 'Not specified'}\n                      </div>\n                      <div>\n                        <strong>Skills:</strong> {activeStudent.skills?.join(', ') || 'None listed'}\n                      </div>\n                    </div>\n                    \n                    <div>\n                      <strong>Bio:</strong>\n                      <p>{activeStudent.bio || 'No bio provided'}</p>\n                    </div>\n                  </div>\n                  \n                  <div style={{ background: 'white', padding: '25px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)', marginBottom: '30px' }}>\n                    <h3 style={{ marginBottom: '20px' }}>Progress</h3>\n                    \n                    <div style={{ marginBottom: '15px' }}>\n                      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px' }}>\n                        <span>Overall Progress</span>\n                        <span>{calculateStudentProgress(activeStudent.id)}%</span>\n                      </div>\n                      <div style={{ height: '8px', background: '#f1f5f9', borderRadius: '4px', overflow: 'hidden' }}>\n                        <div \n                          style={{ \n                            height: '100%', \n                            width: `${calculateStudentProgress(activeStudent.id)}%`, \n                            background: 'linear-gradient(to right, var(--gradient-start), var(--gradient-end))',\n                            borderRadius: '4px',\n                            transition: 'width 0.5s ease'\n                          }}\n                        ></div>\n                      </div>\n                    </div>\n                    \n                    <h4 style={{ marginBottom: '15px', marginTop: '20px' }}>Deliverables</h4>\n                    \n                    {deliverables.map(deliverable => {\n                      const submission = submissions.find(s => \n                        s.deliverableId === deliverable.id && s.studentId === activeStudent.id\n                      );\n                      \n                      return (\n                        <div \n                          key={deliverable.id} \n                          style={{ \n                            padding: '15px',\n                            border: '1px solid #f1f5f9',\n                            borderRadius: '8px',\n                            marginBottom: '10px'\n                          }}\n                        >\n                          <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '5px' }}>\n                            <span style={{ fontWeight: '500' }}>{deliverable.title}</span>\n                            <span className={`feature-badge ${getStatusClass(submission?.status || deliverable.status)}`} style={{ fontSize: '12px', padding: '3px 8px' }}>\n                              {submission?.status || deliverable.status}\n                            </span>\n                          </div>\n                          <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '14px', color: '#666' }}>\n                            <span>Due: {formatDate(deliverable.dueDate)}</span>\n                            <span>{deliverable.points} pts</span>\n                          </div>\n                          \n                          {submission && (\n                            <div style={{ marginTop: '10px', padding: '10px', backgroundColor: '#f8fafc', borderRadius: '8px' }}>\n                              <div style={{ fontSize: '14px', marginBottom: '5px' }}>\n                                <strong>Submitted:</strong> {formatDate(submission.submittedAt)}\n                              </div>\n                              \n                              {submission.content && (\n                                <div style={{ fontSize: '14px', marginBottom: '5px' }}>\n                                  <strong>Notes:</strong> {submission.content}\n                                </div>\n                              )}\n                              \n                              {submission.fileUrl && (\n                                <div style={{ fontSize: '14px', marginBottom: '5px' }}>\n                                  <strong>File:</strong> <a href={submission.fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">View Submission</a>\n                                </div>\n                              )}\n                              \n                              {submission.status === 'submitted' && (\n                                <div style={{ marginTop: '10px' }}>\n                                  <textarea \n                                    placeholder=\"Provide feedback...\"\n                                    style={{ width: '100%', padding: '8px', borderRadius: '8px', border: '1px solid #ddd', marginBottom: '10px' }}\n                                    rows=\"3\"\n                                    id={`feedback-${submission.id}`}\n                                  ></textarea>\n                                  \n                                  <div style={{ display: 'flex', gap: '10px' }}>\n                                    <button \n                                      onClick={() => {\n                                        const feedback = document.getElementById(`feedback-${submission.id}`).value;\n                                        handleProvideFeedback(submission, feedback, 'approved');\n                                      }}\n                                      className=\"btn btn-primary\"\n                                      style={{ flex: '1', padding: '8px' }}\n                                    >\n                                      Approve\n                                    </button>\n                                    <button \n                                      onClick={() => {\n                                        const feedback = document.getElementById(`feedback-${submission.id}`).value;\n                                        handleProvideFeedback(submission, feedback, 'rejected');\n                                      }}\n                                      className=\"btn btn-outline\"\n                                      style={{ flex: '1', padding: '8px' }}\n                                    >\n                                      Request Revisions\n                                    </button>\n                                  </div>\n                                </div>\n                              )}\n                              \n                              {submission.feedback && (\n                                <div style={{ fontSize: '14px', marginTop: '5px' }}>\n                                  <strong>Feedback:</strong> {submission.feedback}\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                  \n                  <div style={{ background: 'white', padding: '25px', borderRadius: '16px', boxShadow: '0 10px 30px rgba(0,0,0,0.05)' }}>\n                    <h3 style={{ marginBottom: '20px' }}>Messages</h3>\n                    \n                    <div style={{ \n                      maxHeight: '300px', \n                      overflowY: 'auto', \n                      marginBottom: '20px',\n                      border: '1px solid #f1f5f9',\n                      borderRadius: '8px',\n                      padding: '15px'\n                    }}>\n                      {messages.length === 0 ? (\n                        <p style={{ textAlign: 'center', color: '#666' }}>No messages yet. Start a conversation with the student.</p>\n                      ) : (\n                        messages.map(message => (\n                          <div \n                            key={message.id} \n                            style={{ \n                              marginBottom: '15px',\n                              display: 'flex',\n                              flexDirection: 'column',\n                              alignItems: message.senderType === 'company' ? 'flex-end' : 'flex-start'\n                            }}\n                          >\n                            <div style={{ \n                              background: message.senderType === 'company' ? 'var(--primary)' : '#f1f5f9',\n                              color: message.senderType === 'company' ? 'white' : 'var(--dark)',\n                              padding: '10px 15px',\n                              borderRadius: '12px',\n                              maxWidth: '80%'\n                            }}>\n                              {message.content}\n                            </div>\n                            <div style={{ \n                              fontSize: '12px', \n                              color: '#666',\n                              marginTop: '4px'\n                            }}>\n                              {message.timestamp ? formatDate(message.timestamp) + ' ' + new Date(message.timestamp.seconds * 1000).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}) : 'Just now'}\n                            </div>\n                          </div>\n                        ))\n                      )}\n                    </div>\n                    \n                    <form onSubmit={handleSubmitMessage}>\n                      <div style={{ display: 'flex', gap: '10px' }}>\n                        <input \n                          type=\"text\"\n                          value={newMessage}\n                          onChange={(e) => setNewMessage(e.target.value)}\n                          placeholder=\"Type a message to the student...\"\n                          style={{ \n                            flex: '1',\n                            padding: '12px',\n                            borderRadius: '8px',\n                            border: '1px solid #ddd'\n                          }}\n                        />\n                        <button \n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          disabled={!newMessage.trim()}\n                        >\n                          Send\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </>\n              ) : (\n                <div style={{ \n                  background: 'white', \n                  padding: '30px', \n                  borderRadius: '16px', \n                  boxShadow: '0 10px 30px rgba(0,0,0,0.05)',\n                  textAlign: 'center'\n                }}>\n                  <div style={{ \n                    width: '60px',\n                    height: '60px',\n                    borderRadius: '50%',\n                    background: '#f1f5f9',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    margin: '0 auto 20px',\n                    fontSize: '24px',\n                    color: '#94a3b8'\n                  }}>\n                    👤\n                  </div>\n                  <h3 style={{ marginBottom: '10px' }}>Select a Student</h3>\n                  <p>Click on a student from the list to view their details and progress.</p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        \n        {/* Deliverables Tab */}\n        {activeTab === 'deliverables' && (\n          <div>\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '20px' }}>\n              <h3>Project Deliverables</h3>\n              <button \n                onClick={() => setIsAddingDeliverable(!isAddingDeliverable)}\n                className=\"btn btn-primary\"\n              >\n                {isAddingDeliverable ? 'Cancel' : 'Add Deliverable'}\n              </button>\n            </div>\n            \n            {isAddingDeliverable && (\n              <div style={{ \n                background: 'white', \n                padding: '25px', \n                borderRadius: '16px', \n                boxShadow: '0 10px 30px rgba(0,0,0,0.05)',\n                marginBottom: '30px'\n              }}>\n                <h3 style={{ marginBottom: '20px' }}>New Deliverable</h3>\n                \n                <form onSubmit={handleAddDeliverable}>\n                  <div className=\"form-group\" style={{ marginBottom: '15px' }}>\n                    <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Title</label>\n                    <input \n                      type=\"text\"\n                      value={newDeliverable.title}\n                      onChange={(e) => setNewDeliverable({ ...newDeliverable, title: e.target.value })}\n                      required\n                      style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                      placeholder=\"E.g. Project Wireframes\"\n                    />\n                  </div>\n                  \n                  <div className=\"form-group\" style={{ marginBottom: '15px' }}>\n                    <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Description</label>\n                    <textarea \n                      value={newDeliverable.description}\n                      onChange={(e) => setNewDeliverable({ ...newDeliverable, description: e.target.value })}\n                      required\n                      style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd', minHeight: '100px' }}\n                      placeholder=\"Describe what the student needs to do for this deliverable...\"\n                    ></textarea>\n                  </div>\n                  \n                  <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '15px', marginBottom: '15px' }}>\n                    <div className=\"form-group\">\n                      <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Due Date</label>\n                      <input \n                        type=\"date\"\n                        value={newDeliverable.dueDate}\n                        onChange={(e) => setNewDeliverable({ ...newDeliverable, dueDate: e.target.value })}\n                        required\n                        style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                      />\n                    </div>\n                    \n                    <div className=\"form-group\">\n                      <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>Points</label>\n                      <input \n                        type=\"number\"\n                        value={newDeliverable.points}\n                        onChange={(e) => setNewDeliverable({ ...newDeliverable, points: e.target.value })}\n                        required\n                        min=\"1\"\n                        style={{ width: '100%', padding: '12px', borderRadius: '8px', border: '1px solid #ddd' }}\n                      />\n                    </div>\n                  </div>\n                  \n                  <button \n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                    style={{ width: '100%' }}\n                  >\n                    Add Deliverable\n                  </button>\n                </form>\n              </div>\n            )}\n            \n            {deliverables.length === 0 ? (\n              <div style={{ \n                background: 'white', \n                padding: '30px', \n                borderRadius: '16px', \n                boxShadow: '0 10px 30px rgba(0,0,0,0.05)',\n                textAlign: 'center'\n              }}>\n                <p>No deliverables have been created yet.</p>\n                <button \n                  onClick={() => setIsAddingDeliverable(true)}\n                  className=\"btn btn-primary\"\n                  style={{ marginTop: '15px' }}\n                >\n                  Create First Deliverable\n                </button>\n              </div>\n            ) : (\n              <div className=\"feature-grid\">\n                {deliverables.map(deliverable => (\n                  <div \n                    key={deliverable.id} \n                    className=\"feature-card\"\n                    style={{ position: 'relative' }}\n                  >\n                    <div style={{ position: 'absolute', top: '20px', right: '20px' }}>\n                      <span className={`feature-badge ${getStatusClass(deliverable.status)}`}>\n                        {deliverable.status}\n                      </span>\n                    </div>\n                    \n                    <h3>{deliverable.title}</h3>\n                    <p>{deliverable.description}</p>\n                    \n                    <div style={{ marginTop: '15px' }}>\n                      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '5px' }}>\n                        <span style={{ fontWeight: '500' }}>Due Date:</span>\n                        <span>{formatDate(deliverable.dueDate)}</span>\n                      </div>\n                      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <span style={{ fontWeight: '500' }}>Points:</span>\n                        <span>{deliverable.points}</span>\n                      </div>\n                    </div>\n                    \n                    <div style={{ marginTop: '15px' }}>\n                      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '5px' }}>\n                        <span style={{ fontWeight: '500' }}>Submitted:</span>\n                        <span>\n                          {submissions.filter(s => s.deliverableId === deliverable.id).length} / {students.length}\n                        </span>\n                      </div>\n                      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <span style={{ fontWeight: '500' }}>Completed:</span>\n                        <span>\n                          {submissions.filter(s => s.deliverableId === deliverable.id && s.status === 'approved').length} / {students.length}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n        \n        {/* Applications Tab */}\n        {activeTab === 'applications' && (\n          <div>\n            <h3 style={{ marginBottom: '20px' }}>Pending Applications</h3>\n            \n            {pendingApplications.length === 0 ? (\n              <div style={{ \n                background: 'white', \n                padding: '30px', \n                borderRadius: '16px', \n                boxShadow: '0 10px 30px rgba(0,0,0,0.05)',\n                textAlign: 'center'\n              }}>\n                <p>No pending applications to review.</p>\n              </div>\n            ) : (\n              <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(400px, 1fr))', gap: '20px' }}>\n                {pendingApplications.map(application => (\n                  <div \n                    key={application.id} \n                    style={{ \n                      background: 'white', \n                      padding: '25px', \n                      borderRadius: '16px', \n                      boxShadow: '0 10px 30px rgba(0,0,0,0.05)'\n                    }}\n                  >\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '15px', marginBottom: '15px' }}>\n                      <div style={{ \n                        width: '50px',\n                        height: '50px',\n                        borderRadius: '50%',\n                        background: 'var(--primary)',\n                        color: 'white',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        fontSize: '18px',\n                        fontWeight: '500'\n                      }}>\n                        {application.studentProfile?.firstName?.charAt(0) || 'S'}\n                        {application.studentProfile?.lastName?.charAt(0) || ''}\n                      </div>\n                      \n                      <div>\n                        <h4 style={{ marginBottom: '5px' }}>\n                          {application.studentProfile?.firstName} {application.studentProfile?.lastName}\n                        </h4>\n                        <div style={{ fontSize: '14px', color: '#666' }}>\n                          {application.studentProfile?.university || 'Student'} - {application.studentProfile?.major || 'Not specified'}\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div style={{ marginBottom: '15px' }}>\n                      <h4 style={{ marginBottom: '10px' }}>Cover Letter</h4>\n                      <p style={{ \n                        padding: '15px', \n                        background: '#f8fafc', \n                        borderRadius: '8px',\n                        fontSize: '14px',\n                        maxHeight: '150px',\n                        overflowY: 'auto'\n                      }}>\n                        {application.coverLetter}\n                      </p>\n                    </div>\n                    \n                    <div style={{ marginBottom: '15px' }}>\n                      <strong>Availability:</strong> {application.availability}\n                    </div>\n                    \n                    <div style={{ marginBottom: '15px' }}>\n                      <strong>Applied:</strong> {formatDate(application.appliedAt)}\n                    </div>\n                    \n                    <div style={{ display: 'flex', gap: '15px' }}>\n                      <button \n                        onClick={() => handleAcceptApplication(application)}\n                        className=\"btn btn-primary\"\n                        style={{ flex: '1' }}\n                      >\n                        Accept\n                      </button>\n                      <button \n                        onClick={() => handleRejectApplication(application)}\n                        className=\"btn btn-outline\"\n                        style={{ flex: '1' }}\n                      >\n                        Decline\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default CompanyProjectManagement;","// src/pages/NotFound.js\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navigation from \"../components/Navigation\";\n\nconst NotFound = () => {\n  return (\n    <>\n      <Navigation />\n      <div\n        style={{\n          padding: \"120px 0\",\n          textAlign: \"center\",\n          background: \"linear-gradient(135deg, #f5f7ff 0%, #eef1ff 100%)\",\n        }}\n      >\n        <div className=\"container\">\n          <h1\n            style={{\n              fontSize: \"120px\",\n              margin: \"0\",\n              background:\n                \"linear-gradient(to right, var(--primary), var(--gradient-end))\",\n              WebkitBackgroundClip: \"text\",\n              WebkitTextFillColor: \"transparent\",\n            }}\n          >\n            404\n          </h1>\n          <h2 style={{ fontSize: \"36px\", marginBottom: \"20px\" }}>\n            Page Not Found\n          </h2>\n          <p\n            style={{\n              fontSize: \"18px\",\n              color: \"#666\",\n              maxWidth: \"600px\",\n              margin: \"0 auto 40px\",\n            }}\n          >\n            The page you are looking for might have been removed, had its name\n            changed, or is temporarily unavailable.\n          </p>\n          <Link to=\"/\" className=\"btn btn-primary\">\n            Back to Home\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NotFound;\n","// src/App.js\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { AuthProvider } from './contexts/AuthContext';\nimport PrivateRoute from './components/PrivateRoute';\n\n// Pages\nimport LandingPage from './pages/LandingPage';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport StudentDashboard from './pages/StudentDashboard';\nimport CompanyDashboard from './pages/CompanyDashboard';\nimport ProjectListings from './pages/ProjectListings';\nimport ProjectDetail from './pages/ProjectDetail';\nimport CreateProfile from './pages/CreateProfile';\nimport PostProject from './pages/PostProject';\nimport StudentProjectPortal from './pages/StudentProjectPortal';\nimport CompanyProjectManagement from './pages/CompanyProjectManagement';\nimport NotFound from './pages/NotFound';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<LandingPage />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/projects\" element={<ProjectListings />} />\n          <Route path=\"/projects/:id\" element={<ProjectDetail />} />\n          \n          {/* Student Routes */}\n          <Route \n            path=\"/student/dashboard\" \n            element={\n              <PrivateRoute>\n                <StudentDashboard />\n              </PrivateRoute>\n            } \n          />\n          <Route \n            path=\"/student/project/:projectId\" \n            element={\n              <PrivateRoute>\n                <StudentProjectPortal />\n              </PrivateRoute>\n            } \n          />\n          \n          {/* Company Routes */}\n          <Route \n            path=\"/company/dashboard\" \n            element={\n              <PrivateRoute>\n                <CompanyDashboard />\n              </PrivateRoute>\n            } \n          />\n          <Route \n            path=\"/company/project/:projectId\" \n            element={\n              <PrivateRoute>\n                <CompanyProjectManagement />\n              </PrivateRoute>\n            } \n          />\n          <Route \n            path=\"/create-profile\" \n            element={\n              <PrivateRoute>\n                <CreateProfile />\n              </PrivateRoute>\n            } \n          />\n          <Route \n            path=\"/post-project\" \n            element={\n              <PrivateRoute>\n                <PostProject />\n              </PrivateRoute>\n            } \n          />\n          \n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './firebase'; // Import firebase to initialize it first\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();"],"sourceRoot":""}